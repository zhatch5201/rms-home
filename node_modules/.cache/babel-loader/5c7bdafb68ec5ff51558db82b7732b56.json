{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zack\\\\Desktop\\\\rms-home\\\\src\\\\Components\\\\people_grid.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { useState, useEffect, Fragment } from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport firebase from \"./firebase\";\nimport CircularProgress from '@material-ui/core/CircularProgress'; // hunter's testing\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport LocationOnIcon from '@material-ui/icons/LocationOn'; // hunter's end\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PeopleGrid() {\n  _s();\n\n  const [people, setPeople] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const ref = firebase.firestore().collection(\"People\"); // just testing\n\n  const useStyles = makeStyles({\n    root: {\n      width: 500\n    }\n  });\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0); // end of testing\n\n  function getPeople() {\n    setLoading(true);\n    ref.onSnapshot(querySnapshot => {\n      const items = [];\n      querySnapshot.forEach(person => {\n        items.push(person.data());\n      });\n      setPeople(items);\n      setLoading(false); // console.log(people);\n    });\n  }\n\n  useEffect(() => {\n    getPeople();\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(CircularProgress, {\n      color: \"secondary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }, this);\n  }\n\n  const columns = [{\n    field: 'id',\n    headerName: 'ID',\n    width: 100\n  }, {\n    field: 'first_name',\n    headerName: 'First name',\n    width: 130\n  }, {\n    field: 'last_name',\n    headerName: 'Last name',\n    width: 130\n  }, {\n    field: 'middle_name',\n    headerName: 'Mid In.',\n    width: 130\n  }, {\n    field: 'address',\n    headerName: 'Address',\n    width: 150\n  } // { field: 'fullName', headerName: 'Full name', description: 'This column has a value getter and is not sortable.', sortable: false, width: 160, valueGetter: (params) => `${params.getValue('firstName') || ''} ${params.getValue('lastName') || ''}`, },\n  ];\n  const rows = people; // console.log(people);\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(BottomNavigation, {\n      value: value,\n      onChange: (event, newValue) => {\n        setValue(newValue);\n      },\n      showLabels: true,\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(BottomNavigationAction, {\n        label: \"Recents\",\n        icon: /*#__PURE__*/_jsxDEV(RestoreIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 53\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(BottomNavigationAction, {\n        label: \"Favorites\",\n        icon: /*#__PURE__*/_jsxDEV(FavoriteIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 55\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(BottomNavigationAction, {\n        label: \"Nearby\",\n        icon: /*#__PURE__*/_jsxDEV(LocationOnIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 52\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '100vh',\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: rows,\n        columns: columns,\n        pageSize: 25,\n        checkboxSelection: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 7\n  }, this);\n}\n\n_s(PeopleGrid, \"FqqGOk+HWF3Q85imr18n13qAdeg=\", true);\n\n_c = PeopleGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"PeopleGrid\");","map":{"version":3,"sources":["C:/Users/Zack/Desktop/rms-home/src/Components/people_grid.js"],"names":["React","useState","useEffect","Fragment","DataGrid","firebase","CircularProgress","makeStyles","BottomNavigation","BottomNavigationAction","RestoreIcon","FavoriteIcon","LocationOnIcon","PeopleGrid","people","setPeople","loading","setLoading","ref","firestore","collection","useStyles","root","width","classes","value","setValue","getPeople","onSnapshot","querySnapshot","items","forEach","person","push","data","columns","field","headerName","rows","event","newValue","height"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { useState, useEffect, Fragment } from 'react';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport firebase from \"./firebase\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n// hunter's testing\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport RestoreIcon from '@material-ui/icons/Restore';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\n// hunter's end\r\n\r\nexport default function PeopleGrid() {\r\n   const [people, setPeople] = useState([]);\r\n   const [loading, setLoading] = useState(true);\r\n   const ref = firebase.firestore().collection(\"People\");\r\n\r\n   // just testing\r\n   const useStyles = makeStyles({\r\n      root: {\r\n        width: 500,\r\n      },\r\n    });\r\n   const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n      // end of testing\r\n\r\n   function getPeople() {\r\n      setLoading(true);\r\n      ref.onSnapshot((querySnapshot) => {\r\n         const items = [];\r\n         querySnapshot.forEach((person) => {\r\n            items.push(person.data());\r\n         });\r\n         setPeople(items);\r\n         setLoading(false);\r\n         // console.log(people);\r\n      });\r\n   }\r\n\r\n   useEffect(() => {\r\n      getPeople();\r\n   }, []);\r\n\r\n   if (loading) {\r\n      return (<CircularProgress color=\"secondary\" />);\r\n   }\r\n\r\n   \r\n\r\n   const columns = [\r\n      { field: 'id', headerName: 'ID', width: 100 },\r\n\r\n      { field: 'first_name', headerName: 'First name', width: 130 },\r\n      { field: 'last_name', headerName: 'Last name', width: 130 },\r\n      { field: 'middle_name', headerName: 'Mid In.', width: 130, },\r\n      { field: 'address', headerName: 'Address', width: 150 },\r\n      // { field: 'fullName', headerName: 'Full name', description: 'This column has a value getter and is not sortable.', sortable: false, width: 160, valueGetter: (params) => `${params.getValue('firstName') || ''} ${params.getValue('lastName') || ''}`, },\r\n   ];\r\n\r\n   const rows = people;\r\n   // console.log(people);\r\n   return (\r\n      <Fragment>\r\n         {/* test */}\r\n         <BottomNavigation\r\n      value={value}\r\n      onChange={(event, newValue) => {\r\n        setValue(newValue);\r\n      }}\r\n      showLabels\r\n      className={classes.root}\r\n    >\r\n      <BottomNavigationAction label=\"Recents\" icon={<RestoreIcon />} />\r\n      <BottomNavigationAction label=\"Favorites\" icon={<FavoriteIcon />} />\r\n      <BottomNavigationAction label=\"Nearby\" icon={<LocationOnIcon />} />\r\n      </BottomNavigation>\r\n      {/* end of test */}\r\n         <div style={{ height: '100vh', width: '100%' }}>\r\n            <DataGrid rows={rows} columns={columns} pageSize={25} checkboxSelection />\r\n         </div>\r\n      </Fragment>\r\n\r\n      \r\n   );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}