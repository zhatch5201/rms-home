{"ast":null,"code":"\"use strict\"; // Copyright 2015 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar _regeneratorRuntime = require(\"C:/Users/Zack/Desktop/rms-home/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"C:/Users/Zack/Desktop/rms-home/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"C:/Users/Zack/Desktop/rms-home/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/Users/Zack/Desktop/rms-home/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*!\n * @module common/service\n */\n\nvar arrify = require(\"arrify\");\n\nvar extend = require(\"extend\");\n\nvar util_1 = require(\"./util\");\n\nvar PROJECT_ID_TOKEN = '{{projectId}}';\n\nvar Service = /*#__PURE__*/function () {\n  /**\n   * Service is a base class, meant to be inherited from by a \"service,\" like\n   * BigQuery or Storage.\n   *\n   * This handles making authenticated requests by exposing a `makeReq_`\n   * function.\n   *\n   * @constructor\n   * @alias module:common/service\n   *\n   * @param {object} config - Configuration object.\n   * @param {string} config.baseUrl - The base URL to make API requests to.\n   * @param {string[]} config.scopes - The scopes required for the request.\n   * @param {object=} options - [Configuration object](#/docs).\n   */\n  function Service(config) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Service);\n\n    this.baseUrl = config.baseUrl;\n    this.apiEndpoint = config.apiEndpoint;\n    this.timeout = options.timeout;\n    this.globalInterceptors = arrify(options.interceptors_);\n    this.interceptors = [];\n    this.packageJson = config.packageJson;\n    this.projectId = options.projectId || PROJECT_ID_TOKEN;\n    this.projectIdRequired = config.projectIdRequired !== false;\n    this.providedUserAgent = options.userAgent;\n    var reqCfg = extend({}, config, {\n      projectIdRequired: this.projectIdRequired,\n      projectId: this.projectId,\n      authClient: options.authClient,\n      credentials: options.credentials,\n      keyFile: options.keyFilename,\n      email: options.email,\n      token: options.token\n    });\n    this.makeAuthenticatedRequest = util_1.util.makeAuthenticatedRequestFactory(reqCfg);\n    this.authClient = this.makeAuthenticatedRequest.authClient;\n    this.getCredentials = this.makeAuthenticatedRequest.getCredentials;\n    var isCloudFunctionEnv = !!process.env.FUNCTION_NAME;\n\n    if (isCloudFunctionEnv) {\n      this.interceptors.push({\n        request: function request(reqOpts) {\n          reqOpts.forever = false;\n          return reqOpts;\n        }\n      });\n    }\n  }\n  /**\n   * Return the user's custom request interceptors.\n   */\n\n\n  _createClass(Service, [{\n    key: \"getRequestInterceptors\",\n    value: function getRequestInterceptors() {\n      // Interceptors should be returned in the order they were assigned.\n      return [].slice.call(this.globalInterceptors).concat(this.interceptors).filter(function (interceptor) {\n        return typeof interceptor.request === 'function';\n      }).map(function (interceptor) {\n        return interceptor.request;\n      });\n    }\n  }, {\n    key: \"getProjectId\",\n    value: function getProjectId(callback) {\n      if (!callback) {\n        return this.getProjectIdAsync();\n      }\n\n      this.getProjectIdAsync().then(function (p) {\n        return callback(null, p);\n      }, callback);\n    }\n  }, {\n    key: \"getProjectIdAsync\",\n    value: function () {\n      var _getProjectIdAsync = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var projectId;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.authClient.getProjectId();\n\n              case 2:\n                projectId = _context.sent;\n\n                if (this.projectId === PROJECT_ID_TOKEN && projectId) {\n                  this.projectId = projectId;\n                }\n\n                return _context.abrupt(\"return\", this.projectId);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getProjectIdAsync() {\n        return _getProjectIdAsync.apply(this, arguments);\n      }\n\n      return getProjectIdAsync;\n    }()\n  }, {\n    key: \"request_\",\n    value: function request_(reqOpts, callback) {\n      reqOpts = extend(true, {}, reqOpts, {\n        timeout: this.timeout\n      });\n      var isAbsoluteUrl = reqOpts.uri.indexOf('http') === 0;\n      var uriComponents = [this.baseUrl];\n\n      if (this.projectIdRequired) {\n        uriComponents.push('projects');\n        uriComponents.push(this.projectId);\n      }\n\n      uriComponents.push(reqOpts.uri);\n\n      if (isAbsoluteUrl) {\n        uriComponents.splice(0, uriComponents.indexOf(reqOpts.uri));\n      }\n\n      reqOpts.uri = uriComponents.map(function (uriComponent) {\n        var trimSlashesRegex = /^\\/*|\\/*$/g;\n        return uriComponent.replace(trimSlashesRegex, '');\n      }).join('/') // Some URIs have colon separators.\n      // Bad: https://.../projects/:list\n      // Good: https://.../projects:list\n      .replace(/\\/:/g, ':');\n      var requestInterceptors = this.getRequestInterceptors();\n      arrify(reqOpts.interceptors_).forEach(function (interceptor) {\n        if (typeof interceptor.request === 'function') {\n          requestInterceptors.push(interceptor.request);\n        }\n      });\n      requestInterceptors.forEach(function (requestInterceptor) {\n        reqOpts = requestInterceptor(reqOpts);\n      });\n      delete reqOpts.interceptors_;\n      var pkg = this.packageJson;\n      var userAgent = util_1.util.getUserAgentFromPackageJson(pkg);\n\n      if (this.providedUserAgent) {\n        userAgent = \"\".concat(this.providedUserAgent, \" \").concat(userAgent);\n      }\n\n      reqOpts.headers = extend({}, reqOpts.headers, {\n        'User-Agent': userAgent,\n        'x-goog-api-client': \"gl-node/\".concat(process.versions.node, \" gccl/\").concat(pkg.version)\n      });\n\n      if (reqOpts.shouldReturnStream) {\n        return this.makeAuthenticatedRequest(reqOpts);\n      } else {\n        this.makeAuthenticatedRequest(reqOpts, callback);\n      }\n    }\n    /**\n     * Make an authenticated API request.\n     *\n     * @param {object} reqOpts - Request options that are passed to `request`.\n     * @param {string} reqOpts.uri - A URI relative to the baseUrl.\n     * @param {function} callback - The callback function passed to `request`.\n     */\n\n  }, {\n    key: \"request\",\n    value: function request(reqOpts, callback) {\n      Service.prototype.request_.call(this, reqOpts, callback);\n    }\n    /**\n     * Make an authenticated API request.\n     *\n     * @param {object} reqOpts - Request options that are passed to `request`.\n     * @param {string} reqOpts.uri - A URI relative to the baseUrl.\n     */\n\n  }, {\n    key: \"requestStream\",\n    value: function requestStream(reqOpts) {\n      var opts = extend(true, reqOpts, {\n        shouldReturnStream: true\n      });\n      return Service.prototype.request_.call(this, opts);\n    }\n  }]);\n\n  return Service;\n}();\n\nexports.Service = Service;","map":{"version":3,"sources":["C:/Users/Zack/Desktop/rms-home/node_modules/@google-cloud/common/build/src/service.js"],"names":["Object","defineProperty","exports","value","arrify","require","extend","util_1","PROJECT_ID_TOKEN","Service","config","options","baseUrl","apiEndpoint","timeout","globalInterceptors","interceptors_","interceptors","packageJson","projectId","projectIdRequired","providedUserAgent","userAgent","reqCfg","authClient","credentials","keyFile","keyFilename","email","token","makeAuthenticatedRequest","util","makeAuthenticatedRequestFactory","getCredentials","isCloudFunctionEnv","process","env","FUNCTION_NAME","push","request","reqOpts","forever","slice","call","concat","filter","interceptor","map","callback","getProjectIdAsync","then","p","getProjectId","isAbsoluteUrl","uri","indexOf","uriComponents","splice","uriComponent","trimSlashesRegex","replace","join","requestInterceptors","getRequestInterceptors","forEach","requestInterceptor","pkg","getUserAgentFromPackageJson","headers","versions","node","version","shouldReturnStream","prototype","request_","opts"],"mappings":"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","sourcesContent":["\"use strict\";\n// Copyright 2015 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*!\n * @module common/service\n */\nconst arrify = require(\"arrify\");\nconst extend = require(\"extend\");\nconst util_1 = require(\"./util\");\nconst PROJECT_ID_TOKEN = '{{projectId}}';\nclass Service {\n    /**\n     * Service is a base class, meant to be inherited from by a \"service,\" like\n     * BigQuery or Storage.\n     *\n     * This handles making authenticated requests by exposing a `makeReq_`\n     * function.\n     *\n     * @constructor\n     * @alias module:common/service\n     *\n     * @param {object} config - Configuration object.\n     * @param {string} config.baseUrl - The base URL to make API requests to.\n     * @param {string[]} config.scopes - The scopes required for the request.\n     * @param {object=} options - [Configuration object](#/docs).\n     */\n    constructor(config, options = {}) {\n        this.baseUrl = config.baseUrl;\n        this.apiEndpoint = config.apiEndpoint;\n        this.timeout = options.timeout;\n        this.globalInterceptors = arrify(options.interceptors_);\n        this.interceptors = [];\n        this.packageJson = config.packageJson;\n        this.projectId = options.projectId || PROJECT_ID_TOKEN;\n        this.projectIdRequired = config.projectIdRequired !== false;\n        this.providedUserAgent = options.userAgent;\n        const reqCfg = extend({}, config, {\n            projectIdRequired: this.projectIdRequired,\n            projectId: this.projectId,\n            authClient: options.authClient,\n            credentials: options.credentials,\n            keyFile: options.keyFilename,\n            email: options.email,\n            token: options.token,\n        });\n        this.makeAuthenticatedRequest = util_1.util.makeAuthenticatedRequestFactory(reqCfg);\n        this.authClient = this.makeAuthenticatedRequest.authClient;\n        this.getCredentials = this.makeAuthenticatedRequest.getCredentials;\n        const isCloudFunctionEnv = !!process.env.FUNCTION_NAME;\n        if (isCloudFunctionEnv) {\n            this.interceptors.push({\n                request(reqOpts) {\n                    reqOpts.forever = false;\n                    return reqOpts;\n                },\n            });\n        }\n    }\n    /**\n     * Return the user's custom request interceptors.\n     */\n    getRequestInterceptors() {\n        // Interceptors should be returned in the order they were assigned.\n        return [].slice\n            .call(this.globalInterceptors)\n            .concat(this.interceptors)\n            .filter(interceptor => typeof interceptor.request === 'function')\n            .map(interceptor => interceptor.request);\n    }\n    getProjectId(callback) {\n        if (!callback) {\n            return this.getProjectIdAsync();\n        }\n        this.getProjectIdAsync().then(p => callback(null, p), callback);\n    }\n    async getProjectIdAsync() {\n        const projectId = await this.authClient.getProjectId();\n        if (this.projectId === PROJECT_ID_TOKEN && projectId) {\n            this.projectId = projectId;\n        }\n        return this.projectId;\n    }\n    request_(reqOpts, callback) {\n        reqOpts = extend(true, {}, reqOpts, { timeout: this.timeout });\n        const isAbsoluteUrl = reqOpts.uri.indexOf('http') === 0;\n        const uriComponents = [this.baseUrl];\n        if (this.projectIdRequired) {\n            uriComponents.push('projects');\n            uriComponents.push(this.projectId);\n        }\n        uriComponents.push(reqOpts.uri);\n        if (isAbsoluteUrl) {\n            uriComponents.splice(0, uriComponents.indexOf(reqOpts.uri));\n        }\n        reqOpts.uri = uriComponents\n            .map(uriComponent => {\n            const trimSlashesRegex = /^\\/*|\\/*$/g;\n            return uriComponent.replace(trimSlashesRegex, '');\n        })\n            .join('/')\n            // Some URIs have colon separators.\n            // Bad: https://.../projects/:list\n            // Good: https://.../projects:list\n            .replace(/\\/:/g, ':');\n        const requestInterceptors = this.getRequestInterceptors();\n        arrify(reqOpts.interceptors_).forEach(interceptor => {\n            if (typeof interceptor.request === 'function') {\n                requestInterceptors.push(interceptor.request);\n            }\n        });\n        requestInterceptors.forEach(requestInterceptor => {\n            reqOpts = requestInterceptor(reqOpts);\n        });\n        delete reqOpts.interceptors_;\n        const pkg = this.packageJson;\n        let userAgent = util_1.util.getUserAgentFromPackageJson(pkg);\n        if (this.providedUserAgent) {\n            userAgent = `${this.providedUserAgent} ${userAgent}`;\n        }\n        reqOpts.headers = extend({}, reqOpts.headers, {\n            'User-Agent': userAgent,\n            'x-goog-api-client': `gl-node/${process.versions.node} gccl/${pkg.version}`,\n        });\n        if (reqOpts.shouldReturnStream) {\n            return this.makeAuthenticatedRequest(reqOpts);\n        }\n        else {\n            this.makeAuthenticatedRequest(reqOpts, callback);\n        }\n    }\n    /**\n     * Make an authenticated API request.\n     *\n     * @param {object} reqOpts - Request options that are passed to `request`.\n     * @param {string} reqOpts.uri - A URI relative to the baseUrl.\n     * @param {function} callback - The callback function passed to `request`.\n     */\n    request(reqOpts, callback) {\n        Service.prototype.request_.call(this, reqOpts, callback);\n    }\n    /**\n     * Make an authenticated API request.\n     *\n     * @param {object} reqOpts - Request options that are passed to `request`.\n     * @param {string} reqOpts.uri - A URI relative to the baseUrl.\n     */\n    requestStream(reqOpts) {\n        const opts = extend(true, reqOpts, { shouldReturnStream: true });\n        return Service.prototype.request_.call(this, opts);\n    }\n}\nexports.Service = Service;\n//# sourceMappingURL=service.js.map"]},"metadata":{},"sourceType":"script"}