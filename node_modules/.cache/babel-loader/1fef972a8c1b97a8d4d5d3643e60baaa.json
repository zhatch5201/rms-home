{"ast":null,"code":"import _slicedToArray from\"C:/Users/Zack/Desktop/rms-home/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import*as React from'react';import{useState,useEffect,Fragment}from'react';import{DataGrid}from'@material-ui/data-grid';import firebase from\"./firebase\";import CircularProgress from'@material-ui/core/CircularProgress';import{jsx as _jsx}from\"react/jsx-runtime\";export default function PeopleGrid(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),people=_useState2[0],setPeople=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];var ref=firebase.firestore().collection(\"People\");function getPeople(){setLoading(true);ref.onSnapshot(function(querySnapshot){var items=[];querySnapshot.forEach(function(person){items.push(person.data());});setPeople(items);setLoading(false);// console.log(people);\n});}useEffect(function(){getPeople();},[]);if(loading){return/*#__PURE__*/_jsx(CircularProgress,{color:\"secondary\"});}var columns=[{field:'id',headerName:'ID',width:100},{field:'first_name',headerName:'First name',width:130},{field:'last_name',headerName:'Last name',width:130},{field:'middle_name',headerName:'Mid In.',width:130},{field:'address',headerName:'Address',width:150}// { field: 'fullName', headerName: 'Full name', description: 'This column has a value getter and is not sortable.', sortable: false, width: 160, valueGetter: (params) => `${params.getValue('firstName') || ''} ${params.getValue('lastName') || ''}`, },\n];var rows=people;// console.log(people);\nreturn/*#__PURE__*/_jsx(Fragment,{children:/*#__PURE__*/_jsx(\"div\",{style:{height:'100vh',width:'100%'},children:/*#__PURE__*/_jsx(DataGrid,{rows:rows,columns:columns,pageSize:25,checkboxSelection:true})})});}","map":{"version":3,"sources":["C:/Users/Zack/Desktop/rms-home/src/Components/people_grid.js"],"names":["React","useState","useEffect","Fragment","DataGrid","firebase","CircularProgress","PeopleGrid","people","setPeople","loading","setLoading","ref","firestore","collection","getPeople","onSnapshot","querySnapshot","items","forEach","person","push","data","columns","field","headerName","width","rows","height"],"mappings":"qJAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,OAASC,QAAT,CAAmBC,SAAnB,CAA8BC,QAA9B,KAA8C,OAA9C,CACA,OAASC,QAAT,KAAyB,wBAAzB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oCAA7B,C,2CAEA,cAAe,SAASC,CAAAA,UAAT,EAAsB,eACNN,QAAQ,CAAC,EAAD,CADF,wCAC3BO,MAD2B,eACnBC,SADmB,8BAEJR,QAAQ,CAAC,IAAD,CAFJ,yCAE3BS,OAF2B,eAElBC,UAFkB,eAGlC,GAAMC,CAAAA,GAAG,CAAGP,QAAQ,CAACQ,SAAT,GAAqBC,UAArB,CAAgC,QAAhC,CAAZ,CAEA,QAASC,CAAAA,SAAT,EAAqB,CAClBJ,UAAU,CAAC,IAAD,CAAV,CACAC,GAAG,CAACI,UAAJ,CAAe,SAACC,aAAD,CAAmB,CAC/B,GAAMC,CAAAA,KAAK,CAAG,EAAd,CACAD,aAAa,CAACE,OAAd,CAAsB,SAACC,MAAD,CAAY,CAC/BF,KAAK,CAACG,IAAN,CAAWD,MAAM,CAACE,IAAP,EAAX,EACF,CAFD,EAGAb,SAAS,CAACS,KAAD,CAAT,CACAP,UAAU,CAAC,KAAD,CAAV,CACA;AACF,CARD,EASF,CAEDT,SAAS,CAAC,UAAM,CACba,SAAS,GACX,CAFQ,CAEN,EAFM,CAAT,CAIA,GAAIL,OAAJ,CAAa,CACV,mBAAQ,KAAC,gBAAD,EAAkB,KAAK,CAAC,WAAxB,EAAR,CACF,CAGD,GAAMa,CAAAA,OAAO,CAAG,CACb,CAAEC,KAAK,CAAE,IAAT,CAAeC,UAAU,CAAE,IAA3B,CAAiCC,KAAK,CAAE,GAAxC,CADa,CAGb,CAAEF,KAAK,CAAE,YAAT,CAAuBC,UAAU,CAAE,YAAnC,CAAiDC,KAAK,CAAE,GAAxD,CAHa,CAIb,CAAEF,KAAK,CAAE,WAAT,CAAsBC,UAAU,CAAE,WAAlC,CAA+CC,KAAK,CAAE,GAAtD,CAJa,CAKb,CAAEF,KAAK,CAAE,aAAT,CAAwBC,UAAU,CAAE,SAApC,CAA+CC,KAAK,CAAE,GAAtD,CALa,CAMb,CAAEF,KAAK,CAAE,SAAT,CAAoBC,UAAU,CAAE,SAAhC,CAA2CC,KAAK,CAAE,GAAlD,CACA;AAPa,CAAhB,CAUA,GAAMC,CAAAA,IAAI,CAAGnB,MAAb,CACA;AACA,mBACG,KAAC,QAAD,wBACG,YAAK,KAAK,CAAE,CAAEoB,MAAM,CAAE,OAAV,CAAmBF,KAAK,CAAE,MAA1B,CAAZ,uBACG,KAAC,QAAD,EAAU,IAAI,CAAEC,IAAhB,CAAsB,OAAO,CAAEJ,OAA/B,CAAwC,QAAQ,CAAE,EAAlD,CAAsD,iBAAiB,KAAvE,EADH,EADH,EADH,CAOF","sourcesContent":["import * as React from 'react';\r\nimport { useState, useEffect, Fragment } from 'react';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport firebase from \"./firebase\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nexport default function PeopleGrid() {\r\n   const [people, setPeople] = useState([]);\r\n   const [loading, setLoading] = useState(true);\r\n   const ref = firebase.firestore().collection(\"People\");\r\n\r\n   function getPeople() {\r\n      setLoading(true);\r\n      ref.onSnapshot((querySnapshot) => {\r\n         const items = [];\r\n         querySnapshot.forEach((person) => {\r\n            items.push(person.data());\r\n         });\r\n         setPeople(items);\r\n         setLoading(false);\r\n         // console.log(people);\r\n      });\r\n   }\r\n\r\n   useEffect(() => {\r\n      getPeople();\r\n   }, []);\r\n\r\n   if (loading) {\r\n      return (<CircularProgress color=\"secondary\" />);\r\n   }\r\n\r\n\r\n   const columns = [\r\n      { field: 'id', headerName: 'ID', width: 100 },\r\n\r\n      { field: 'first_name', headerName: 'First name', width: 130 },\r\n      { field: 'last_name', headerName: 'Last name', width: 130 },\r\n      { field: 'middle_name', headerName: 'Mid In.', width: 130, },\r\n      { field: 'address', headerName: 'Address', width: 150 },\r\n      // { field: 'fullName', headerName: 'Full name', description: 'This column has a value getter and is not sortable.', sortable: false, width: 160, valueGetter: (params) => `${params.getValue('firstName') || ''} ${params.getValue('lastName') || ''}`, },\r\n   ];\r\n\r\n   const rows = people;\r\n   // console.log(people);\r\n   return (\r\n      <Fragment>\r\n         <div style={{ height: '100vh', width: '100%' }}>\r\n            <DataGrid rows={rows} columns={columns} pageSize={25} checkboxSelection />\r\n         </div>\r\n      </Fragment>\r\n   );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}