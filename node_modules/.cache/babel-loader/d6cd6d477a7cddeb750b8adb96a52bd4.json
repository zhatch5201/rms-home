{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zack\\\\Desktop\\\\rms-home\\\\src\\\\Components\\\\people_grid.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { useState, useEffect, Fragment } from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport firebase from \"./firebase\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PeopleGrid() {\n  _s();\n\n  // ================================== Get People stuff ==================================\n  const [people, setPeople] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const ref = firebase.firestore().collection(\"People\");\n\n  function getPeople() {\n    setLoading(true);\n    ref.onSnapshot(querySnapshot => {\n      const items = [];\n      querySnapshot.forEach(person => {\n        items.push(person.data());\n      });\n      setPeople(items);\n      setLoading(false); // console.log(people);\n    });\n  }\n\n  useEffect(() => {\n    getPeople();\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(CircularProgress, {\n      color: \"secondary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }, this);\n  } // ================================== Get People stuff ==================================\n  // ================================== Link Styles ==================================\n\n\n  const styles = makeStyles(theme => ({\n    link: {\n      color: 'black'\n    }\n  }));\n  const linkstyles = styles(); // ================================== Link Styles ==================================\n\n  const columns = [{\n    field: 'fullName',\n    headerName: 'Full name',\n    sortable: false,\n    width: 160,\n    renderCell: person_fields => {\n      return /*#__PURE__*/_jsxDEV(Link, {\n        className: linkstyles.link,\n        to: `/people/${person_fields.getValue('id')}`,\n        children: [person_fields.getValue('first_name'), \" \", person_fields.getValue('last_name')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 16\n      }, this);\n    }\n  }, {\n    field: 'address',\n    headerName: 'Address',\n    width: 150\n  }];\n  const rows = people; // console.log(people);\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '100vh',\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: rows,\n        columns: columns,\n        pageSize: 25,\n        checkboxSelection: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 7\n  }, this);\n}\n\n_s(PeopleGrid, \"b3BFqtNlv/+8lPVmieNQw64yYCM=\");\n\n_c = PeopleGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"PeopleGrid\");","map":{"version":3,"sources":["C:/Users/Zack/Desktop/rms-home/src/Components/people_grid.js"],"names":["React","useState","useEffect","Fragment","DataGrid","firebase","CircularProgress","Link","makeStyles","PeopleGrid","people","setPeople","loading","setLoading","ref","firestore","collection","getPeople","onSnapshot","querySnapshot","items","forEach","person","push","data","styles","theme","link","color","linkstyles","columns","field","headerName","sortable","width","renderCell","person_fields","getValue","rows","height"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { useState, useEffect, Fragment } from 'react';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport firebase from \"./firebase\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\n\r\nexport default function PeopleGrid() {\r\n   // ================================== Get People stuff ==================================\r\n   const [people, setPeople] = useState([]);\r\n   const [loading, setLoading] = useState(true);\r\n   const ref = firebase.firestore().collection(\"People\");\r\n\r\n   function getPeople() {\r\n      setLoading(true);\r\n      ref.onSnapshot((querySnapshot) => {\r\n         const items = [];\r\n         querySnapshot.forEach((person) => {\r\n            items.push(person.data());\r\n         });\r\n         setPeople(items);\r\n         setLoading(false);\r\n         // console.log(people);\r\n      });\r\n   }\r\n\r\n   useEffect(() => {\r\n      getPeople();\r\n   }, []);\r\n\r\n   if (loading) {\r\n      return (<CircularProgress color=\"secondary\" />);\r\n   }\r\n   // ================================== Get People stuff ==================================\r\n   // ================================== Link Styles ==================================\r\n   const styles = makeStyles((theme) => ({\r\n      link: {\r\n         color: 'black',\r\n      },\r\n   }));\r\n   const linkstyles = styles();\r\n   // ================================== Link Styles ==================================\r\n\r\n\r\n   const columns = [\r\n      {\r\n         field: 'fullName', headerName: 'Full name', sortable: false, width: 160, renderCell: (person_fields) => {\r\n            return (\r\n               <Link className={linkstyles.link} to={`/people/${person_fields.getValue('id')}`}>{person_fields.getValue('first_name')} {person_fields.getValue('last_name')}</Link>\r\n            );\r\n         }\r\n      },\r\n      { field: 'address', headerName: 'Address', width: 150 },\r\n\r\n   ];\r\n\r\n   const rows = people;\r\n   // console.log(people);\r\n   return (\r\n      <Fragment>\r\n         <div style={{ height: '100vh', width: '100%' }}>\r\n            <DataGrid rows={rows} columns={columns} pageSize={25} checkboxSelection />\r\n         </div>\r\n      </Fragment>\r\n\r\n\r\n   );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}