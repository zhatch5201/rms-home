{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar _classCallCheck = require(\"C:/Users/Zack/Desktop/rms-home/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/Users/Zack/Desktop/rms-home/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NormalApiCaller = void 0;\n\nvar call_1 = require(\"../call\");\n/**\n * Creates an API caller for regular unary methods.\n */\n\n\nvar NormalApiCaller = /*#__PURE__*/function () {\n  function NormalApiCaller() {\n    _classCallCheck(this, NormalApiCaller);\n  }\n\n  _createClass(NormalApiCaller, [{\n    key: \"init\",\n    value: function init(callback) {\n      if (callback) {\n        return new call_1.OngoingCall(callback);\n      }\n\n      return new call_1.OngoingCallPromise();\n    }\n  }, {\n    key: \"wrap\",\n    value: function wrap(func) {\n      return func;\n    }\n  }, {\n    key: \"call\",\n    value: function call(apiCall, argument, settings, canceller) {\n      canceller.call(apiCall, argument);\n    }\n  }, {\n    key: \"fail\",\n    value: function fail(canceller, err) {\n      canceller.callback(err);\n    }\n  }, {\n    key: \"result\",\n    value: function result(canceller) {\n      return canceller.promise;\n    }\n  }]);\n\n  return NormalApiCaller;\n}();\n\nexports.NormalApiCaller = NormalApiCaller;","map":{"version":3,"sources":["../../../src/normalCalls/normalApiCaller.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;AAcG;;;;;;;;;;;AAIH,IAAA,MAAA,GAAA,OAAA,CAAA,SAAA,CAAA;AAGA;;AAEG;;;IACU,e;;;;;;;WACX,cAAK,QAAL,EAA2B;AACzB,UAAI,QAAJ,EAAc;AACZ,eAAO,IAAI,MAAA,CAAA,WAAJ,CAAgB,QAAhB,CAAP;AACD;;AACD,aAAO,IAAI,MAAA,CAAA,kBAAJ,EAAP;AACD;;;WAED,cAAK,IAAL,EAAmB;AACjB,aAAO,IAAP;AACD;;;WAED,cACE,OADF,EAEE,QAFF,EAGE,QAHF,EAIE,SAJF,EAI+B;AAE7B,MAAA,SAAS,CAAC,IAAV,CAAe,OAAf,EAAwB,QAAxB;AACD;;;WAED,cAAK,SAAL,EAAoC,GAApC,EAAoD;AAClD,MAAA,SAAS,CAAC,QAAV,CAAoB,GAApB;AACD;;;WAED,gBAAO,SAAP,EAAoC;AAClC,aAAO,SAAS,CAAC,OAAjB;AACD;;;;;;AA3BH,OAAA,CAAA,eAAA,GAAA,eAAA","sourceRoot":"","sourcesContent":["\"use strict\";\n/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NormalApiCaller = void 0;\nconst call_1 = require(\"../call\");\n/**\n * Creates an API caller for regular unary methods.\n */\nclass NormalApiCaller {\n    init(callback) {\n        if (callback) {\n            return new call_1.OngoingCall(callback);\n        }\n        return new call_1.OngoingCallPromise();\n    }\n    wrap(func) {\n        return func;\n    }\n    call(apiCall, argument, settings, canceller) {\n        canceller.call(apiCall, argument);\n    }\n    fail(canceller, err) {\n        canceller.callback(err);\n    }\n    result(canceller) {\n        return canceller.promise;\n    }\n}\nexports.NormalApiCaller = NormalApiCaller;\n//# sourceMappingURL=normalApiCaller.js.map"]},"metadata":{},"sourceType":"script"}