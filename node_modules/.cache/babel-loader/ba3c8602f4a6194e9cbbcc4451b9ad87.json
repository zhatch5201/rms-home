{"ast":null,"code":"import _slicedToArray from\"C:/Users/Zack/Desktop/rms-home/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import*as React from'react';import{useState,useEffect,Fragment}from'react';import{DataGrid}from'@material-ui/data-grid';import firebase from\"./firebase\";import CircularProgress from'@material-ui/core/CircularProgress';import{Link}from'react-router-dom';import{makeStyles}from'@material-ui/core/styles';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function PeopleGrid(){// ================================== Get People stuff ==================================\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),people=_useState2[0],setPeople=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];var ref=firebase.firestore().collection(\"People\");function getPeople(){setLoading(true);ref.onSnapshot(function(querySnapshot){var items=[];querySnapshot.forEach(function(person){items.push(person.data());});setPeople(items);setLoading(false);// console.log(people);\n});}useEffect(function(){getPeople();},[]);if(loading){return/*#__PURE__*/_jsx(CircularProgress,{color:\"secondary\"});}// ================================== Get People stuff ==================================\n// ================================== Link Styles ==================================\n// ================================== Link Styles ==================================\nvar columns=[{field:'fullName',headerName:'Full name',sortable:false,width:160,renderCell:function renderCell(person_fields){return/*#__PURE__*/_jsxs(Link,{to:\"/people/\".concat(person_fields.getValue('id')),children:[person_fields.getValue('first_name'),\" \",person_fields.getValue('last_name')]});}},{field:'address',headerName:'Address',width:150}];var rows=people;// console.log(people);\nreturn/*#__PURE__*/_jsx(Fragment,{children:/*#__PURE__*/_jsx(\"div\",{style:{height:'100vh',width:'100%'},children:/*#__PURE__*/_jsx(DataGrid,{rows:rows,columns:columns,pageSize:25,checkboxSelection:true})})});}","map":{"version":3,"sources":["C:/Users/Zack/Desktop/rms-home/src/Components/people_grid.js"],"names":["React","useState","useEffect","Fragment","DataGrid","firebase","CircularProgress","Link","makeStyles","PeopleGrid","people","setPeople","loading","setLoading","ref","firestore","collection","getPeople","onSnapshot","querySnapshot","items","forEach","person","push","data","columns","field","headerName","sortable","width","renderCell","person_fields","getValue","rows","height"],"mappings":"qJAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,OAASC,QAAT,CAAmBC,SAAnB,CAA8BC,QAA9B,KAA8C,OAA9C,CACA,OAASC,QAAT,KAAyB,wBAAzB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oCAA7B,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,OAASC,UAAT,KAA2B,0BAA3B,C,wFAIA,cAAe,SAASC,CAAAA,UAAT,EAAsB,CAClC;AADkC,cAENR,QAAQ,CAAC,EAAD,CAFF,wCAE3BS,MAF2B,eAEnBC,SAFmB,8BAGJV,QAAQ,CAAC,IAAD,CAHJ,yCAG3BW,OAH2B,eAGlBC,UAHkB,eAIlC,GAAMC,CAAAA,GAAG,CAAGT,QAAQ,CAACU,SAAT,GAAqBC,UAArB,CAAgC,QAAhC,CAAZ,CAEA,QAASC,CAAAA,SAAT,EAAqB,CAClBJ,UAAU,CAAC,IAAD,CAAV,CACAC,GAAG,CAACI,UAAJ,CAAe,SAACC,aAAD,CAAmB,CAC/B,GAAMC,CAAAA,KAAK,CAAG,EAAd,CACAD,aAAa,CAACE,OAAd,CAAsB,SAACC,MAAD,CAAY,CAC/BF,KAAK,CAACG,IAAN,CAAWD,MAAM,CAACE,IAAP,EAAX,EACF,CAFD,EAGAb,SAAS,CAACS,KAAD,CAAT,CACAP,UAAU,CAAC,KAAD,CAAV,CACA;AACF,CARD,EASF,CAEDX,SAAS,CAAC,UAAM,CACbe,SAAS,GACX,CAFQ,CAEN,EAFM,CAAT,CAIA,GAAIL,OAAJ,CAAa,CACV,mBAAQ,KAAC,gBAAD,EAAkB,KAAK,CAAC,WAAxB,EAAR,CACF,CACD;AACA;AAEA;AAGA,GAAMa,CAAAA,OAAO,CAAG,CACb,CACGC,KAAK,CAAE,UADV,CACsBC,UAAU,CAAE,WADlC,CAC+CC,QAAQ,CAAE,KADzD,CACgEC,KAAK,CAAE,GADvE,CAC4EC,UAAU,CAAE,oBAACC,aAAD,CAAmB,CACrG,mBACG,MAAC,IAAD,EAAM,EAAE,mBAAaA,aAAa,CAACC,QAAd,CAAuB,IAAvB,CAAb,CAAR,WAAsDD,aAAa,CAACC,QAAd,CAAuB,YAAvB,CAAtD,KAA6FD,aAAa,CAACC,QAAd,CAAuB,WAAvB,CAA7F,GADH,CAGF,CALJ,CADa,CAQb,CAAEN,KAAK,CAAE,SAAT,CAAoBC,UAAU,CAAE,SAAhC,CAA2CE,KAAK,CAAE,GAAlD,CARa,CAAhB,CAYA,GAAMI,CAAAA,IAAI,CAAGvB,MAAb,CACA;AACA,mBACG,KAAC,QAAD,wBACG,YAAK,KAAK,CAAE,CAAEwB,MAAM,CAAE,OAAV,CAAmBL,KAAK,CAAE,MAA1B,CAAZ,uBACG,KAAC,QAAD,EAAU,IAAI,CAAEI,IAAhB,CAAsB,OAAO,CAAER,OAA/B,CAAwC,QAAQ,CAAE,EAAlD,CAAsD,iBAAiB,KAAvE,EADH,EADH,EADH,CASF","sourcesContent":["import * as React from 'react';\r\nimport { useState, useEffect, Fragment } from 'react';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport firebase from \"./firebase\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\n\r\nexport default function PeopleGrid() {\r\n   // ================================== Get People stuff ==================================\r\n   const [people, setPeople] = useState([]);\r\n   const [loading, setLoading] = useState(true);\r\n   const ref = firebase.firestore().collection(\"People\");\r\n\r\n   function getPeople() {\r\n      setLoading(true);\r\n      ref.onSnapshot((querySnapshot) => {\r\n         const items = [];\r\n         querySnapshot.forEach((person) => {\r\n            items.push(person.data());\r\n         });\r\n         setPeople(items);\r\n         setLoading(false);\r\n         // console.log(people);\r\n      });\r\n   }\r\n\r\n   useEffect(() => {\r\n      getPeople();\r\n   }, []);\r\n\r\n   if (loading) {\r\n      return (<CircularProgress color=\"secondary\" />);\r\n   }\r\n   // ================================== Get People stuff ==================================\r\n   // ================================== Link Styles ==================================\r\n\r\n   // ================================== Link Styles ==================================\r\n\r\n\r\n   const columns = [\r\n      {\r\n         field: 'fullName', headerName: 'Full name', sortable: false, width: 160, renderCell: (person_fields) => {\r\n            return (\r\n               <Link to={`/people/${person_fields.getValue('id')}`}>{person_fields.getValue('first_name')} {person_fields.getValue('last_name')}</Link>\r\n            );\r\n         }\r\n      },\r\n      { field: 'address', headerName: 'Address', width: 150 },\r\n\r\n   ];\r\n\r\n   const rows = people;\r\n   // console.log(people);\r\n   return (\r\n      <Fragment>\r\n         <div style={{ height: '100vh', width: '100%' }}>\r\n            <DataGrid rows={rows} columns={columns} pageSize={25} checkboxSelection />\r\n         </div>\r\n      </Fragment>\r\n\r\n\r\n   );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}