{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar _defineProperty = require(\"C:/Users/Zack/Desktop/rms-home/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _regeneratorRuntime = require(\"C:/Users/Zack/Desktop/rms-home/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _toConsumableArray = require(\"C:/Users/Zack/Desktop/rms-home/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _slicedToArray = require(\"C:/Users/Zack/Desktop/rms-home/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _asyncToGenerator = require(\"C:/Users/Zack/Desktop/rms-home/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"C:/Users/Zack/Desktop/rms-home/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/Users/Zack/Desktop/rms-home/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PageDescriptor = void 0;\n\nvar ended = require(\"is-stream-ended\");\n\nvar stream_1 = require(\"stream\");\n\nvar normalApiCaller_1 = require(\"../normalCalls/normalApiCaller\");\n\nvar pagedApiCaller_1 = require(\"./pagedApiCaller\");\n/**\n * A descriptor for methods that support pagination.\n */\n\n\nvar PageDescriptor = /*#__PURE__*/function () {\n  function PageDescriptor(requestPageTokenField, responsePageTokenField, resourceField) {\n    _classCallCheck(this, PageDescriptor);\n\n    this.requestPageTokenField = requestPageTokenField;\n    this.responsePageTokenField = responsePageTokenField;\n    this.resourceField = resourceField;\n  }\n  /**\n   * Creates a new object Stream which emits the resource on 'data' event.\n   */\n\n\n  _createClass(PageDescriptor, [{\n    key: \"createStream\",\n    value: function createStream(apiCall, request, options) {\n      var stream = new stream_1.PassThrough({\n        objectMode: true\n      });\n      options = Object.assign({}, options, {\n        autoPaginate: false\n      });\n      var maxResults = 'maxResults' in options ? options.maxResults : -1;\n      var pushCount = 0;\n      var started = false;\n\n      function callback(err, resources, next, apiResp) {\n        if (err) {\n          stream.emit('error', err);\n          return;\n        } // emit full api response with every page.\n\n\n        stream.emit('response', apiResp);\n\n        for (var i = 0; i < resources.length; ++i) {\n          if (ended(stream)) {\n            return;\n          }\n\n          if (resources[i] === null) {\n            continue;\n          }\n\n          stream.push(resources[i]);\n          pushCount++;\n\n          if (pushCount === maxResults) {\n            stream.end();\n          }\n        }\n\n        if (ended(stream)) {\n          return;\n        }\n\n        if (!next) {\n          stream.end();\n          return;\n        } // When pageToken is specified in the original options, it will overwrite\n        // the page token field in the next request. Therefore it must be cleared.\n\n\n        if ('pageToken' in options) {\n          delete options.pageToken;\n        }\n\n        if (stream.isPaused()) {\n          request = next;\n          started = false;\n        } else {\n          setImmediate(apiCall, next, options, callback);\n        }\n      }\n\n      stream.on('resume', function () {\n        if (!started) {\n          started = true;\n          apiCall(request, options, callback);\n        }\n      });\n      return stream;\n    }\n    /**\n     * Create an async iterable which can be recursively called for data on-demand.\n     */\n\n  }, {\n    key: \"asyncIterate\",\n    value: function asyncIterate(apiCall, request, options) {\n      options = Object.assign({}, options, {\n        autoPaginate: false\n      });\n      var iterable = this.createIterator(apiCall, request, options);\n      return iterable;\n    }\n  }, {\n    key: \"createIterator\",\n    value: function createIterator(apiCall, request, options) {\n      var asyncIterable = _defineProperty({}, Symbol.asyncIterator, function () {\n        var nextPageRequest = request;\n        var cache = [];\n        return {\n          next: function next() {\n            return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n              var result, _yield$apiCall, _yield$apiCall2;\n\n              return _regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      if (!(cache.length > 0)) {\n                        _context.next = 2;\n                        break;\n                      }\n\n                      return _context.abrupt(\"return\", Promise.resolve({\n                        done: false,\n                        value: cache.shift()\n                      }));\n\n                    case 2:\n                      if (!nextPageRequest) {\n                        _context.next = 10;\n                        break;\n                      }\n\n                      _context.next = 5;\n                      return apiCall(nextPageRequest, options);\n\n                    case 5:\n                      _yield$apiCall = _context.sent;\n                      _yield$apiCall2 = _slicedToArray(_yield$apiCall, 2);\n                      result = _yield$apiCall2[0];\n                      nextPageRequest = _yield$apiCall2[1];\n                      cache.push.apply(cache, _toConsumableArray(result));\n\n                    case 10:\n                      if (!(cache.length === 0)) {\n                        _context.next = 12;\n                        break;\n                      }\n\n                      return _context.abrupt(\"return\", Promise.resolve({\n                        done: true,\n                        value: undefined\n                      }));\n\n                    case 12:\n                      return _context.abrupt(\"return\", Promise.resolve({\n                        done: false,\n                        value: cache.shift()\n                      }));\n\n                    case 13:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee);\n            }))();\n          }\n        };\n      });\n\n      return asyncIterable;\n    }\n  }, {\n    key: \"getApiCaller\",\n    value: function getApiCaller(settings) {\n      if (!settings.autoPaginate) {\n        return new normalApiCaller_1.NormalApiCaller();\n      }\n\n      return new pagedApiCaller_1.PagedApiCaller(this);\n    }\n  }]);\n\n  return PageDescriptor;\n}();\n\nexports.PageDescriptor = PageDescriptor;","map":{"version":3,"sources":["../../../src/paginationCalls/pageDescriptor.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\n/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PageDescriptor = void 0;\nconst ended = require(\"is-stream-ended\");\nconst stream_1 = require(\"stream\");\nconst normalApiCaller_1 = require(\"../normalCalls/normalApiCaller\");\nconst pagedApiCaller_1 = require(\"./pagedApiCaller\");\n/**\n * A descriptor for methods that support pagination.\n */\nclass PageDescriptor {\n    constructor(requestPageTokenField, responsePageTokenField, resourceField) {\n        this.requestPageTokenField = requestPageTokenField;\n        this.responsePageTokenField = responsePageTokenField;\n        this.resourceField = resourceField;\n    }\n    /**\n     * Creates a new object Stream which emits the resource on 'data' event.\n     */\n    createStream(apiCall, request, options) {\n        const stream = new stream_1.PassThrough({ objectMode: true });\n        options = Object.assign({}, options, { autoPaginate: false });\n        const maxResults = 'maxResults' in options ? options.maxResults : -1;\n        let pushCount = 0;\n        let started = false;\n        function callback(err, resources, next, apiResp) {\n            if (err) {\n                stream.emit('error', err);\n                return;\n            }\n            // emit full api response with every page.\n            stream.emit('response', apiResp);\n            for (let i = 0; i < resources.length; ++i) {\n                if (ended(stream)) {\n                    return;\n                }\n                if (resources[i] === null) {\n                    continue;\n                }\n                stream.push(resources[i]);\n                pushCount++;\n                if (pushCount === maxResults) {\n                    stream.end();\n                }\n            }\n            if (ended(stream)) {\n                return;\n            }\n            if (!next) {\n                stream.end();\n                return;\n            }\n            // When pageToken is specified in the original options, it will overwrite\n            // the page token field in the next request. Therefore it must be cleared.\n            if ('pageToken' in options) {\n                delete options.pageToken;\n            }\n            if (stream.isPaused()) {\n                request = next;\n                started = false;\n            }\n            else {\n                setImmediate(apiCall, next, options, callback);\n            }\n        }\n        stream.on('resume', () => {\n            if (!started) {\n                started = true;\n                apiCall(request, options, callback);\n            }\n        });\n        return stream;\n    }\n    /**\n     * Create an async iterable which can be recursively called for data on-demand.\n     */\n    asyncIterate(apiCall, request, options) {\n        options = Object.assign({}, options, { autoPaginate: false });\n        const iterable = this.createIterator(apiCall, request, options);\n        return iterable;\n    }\n    createIterator(apiCall, request, options) {\n        const asyncIterable = {\n            [Symbol.asyncIterator]() {\n                let nextPageRequest = request;\n                const cache = [];\n                return {\n                    async next() {\n                        if (cache.length > 0) {\n                            return Promise.resolve({\n                                done: false,\n                                value: cache.shift(),\n                            });\n                        }\n                        if (nextPageRequest) {\n                            let result;\n                            [result, nextPageRequest] = (await apiCall(nextPageRequest, options));\n                            cache.push(...result);\n                        }\n                        if (cache.length === 0) {\n                            return Promise.resolve({ done: true, value: undefined });\n                        }\n                        return Promise.resolve({ done: false, value: cache.shift() });\n                    },\n                };\n            },\n        };\n        return asyncIterable;\n    }\n    getApiCaller(settings) {\n        if (!settings.autoPaginate) {\n            return new normalApiCaller_1.NormalApiCaller();\n        }\n        return new pagedApiCaller_1.PagedApiCaller(this);\n    }\n}\nexports.PageDescriptor = PageDescriptor;\n//# sourceMappingURL=pageDescriptor.js.map"]},"metadata":{},"sourceType":"script"}