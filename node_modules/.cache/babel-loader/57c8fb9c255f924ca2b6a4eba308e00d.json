{"ast":null,"code":"\"use strict\"; // Copyright 2014 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar _createForOfIteratorHelper = require(\"C:/Users/Zack/Desktop/rms-home/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"C:/Users/Zack/Desktop/rms-home/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/Users/Zack/Desktop/rms-home/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"C:/Users/Zack/Desktop/rms-home/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _assertThisInitialized = require(\"C:/Users/Zack/Desktop/rms-home/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/assertThisInitialized\");\n\nvar _inherits = require(\"C:/Users/Zack/Desktop/rms-home/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"C:/Users/Zack/Desktop/rms-home/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _wrapNativeSuper = require(\"C:/Users/Zack/Desktop/rms-home/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapNativeSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*!\n * @module common/util\n */\n\nvar projectify_1 = require(\"@google-cloud/projectify\");\n\nvar ent = require(\"ent\");\n\nvar extend = require(\"extend\");\n\nvar google_auth_library_1 = require(\"google-auth-library\");\n\nvar retryRequest = require(\"retry-request\");\n\nvar stream_1 = require(\"stream\");\n\nvar teeny_request_1 = require(\"teeny-request\"); // eslint-disable-next-line @typescript-eslint/no-var-requires\n\n\nvar duplexify = require('duplexify');\n\nvar requestDefaults = {\n  timeout: 60000,\n  gzip: true,\n  forever: true,\n  pool: {\n    maxSockets: Infinity\n  }\n};\n/**\n * Custom error type for API errors.\n *\n * @param {object} errorBody - Error object.\n */\n\nvar ApiError = /*#__PURE__*/function (_Error) {\n  _inherits(ApiError, _Error);\n\n  var _super = _createSuper(ApiError);\n\n  function ApiError(errorBodyOrMessage) {\n    var _this;\n\n    _classCallCheck(this, ApiError);\n\n    _this = _super.call(this);\n\n    if (typeof errorBodyOrMessage !== 'object') {\n      _this.message = errorBodyOrMessage || '';\n      return _possibleConstructorReturn(_this);\n    }\n\n    var errorBody = errorBodyOrMessage;\n    _this.code = errorBody.code;\n    _this.errors = errorBody.errors;\n    _this.response = errorBody.response;\n\n    try {\n      _this.errors = JSON.parse(_this.response.body).error.errors;\n    } catch (e) {\n      _this.errors = errorBody.errors;\n    }\n\n    _this.message = ApiError.createMultiErrorMessage(errorBody, _this.errors);\n    Error.captureStackTrace(_assertThisInitialized(_this));\n    return _this;\n  }\n  /**\n   * Pieces together an error message by combining all unique error messages\n   * returned from a single GoogleError\n   *\n   * @private\n   *\n   * @param {GoogleErrorBody} err The original error.\n   * @param {GoogleInnerError[]} [errors] Inner errors, if any.\n   * @returns {string}\n   */\n\n\n  _createClass(ApiError, null, [{\n    key: \"createMultiErrorMessage\",\n    value: function createMultiErrorMessage(err, errors) {\n      var messages = new Set();\n\n      if (err.message) {\n        messages.add(err.message);\n      }\n\n      if (errors && errors.length) {\n        errors.forEach(function (_ref) {\n          var message = _ref.message;\n          return messages.add(message);\n        });\n      } else if (err.response && err.response.body) {\n        messages.add(ent.decode(err.response.body.toString()));\n      } else if (!err.message) {\n        messages.add('A failure occurred during this request.');\n      }\n\n      var messageArr = Array.from(messages);\n\n      if (messageArr.length > 1) {\n        messageArr = messageArr.map(function (message, i) {\n          return \"    \".concat(i + 1, \". \").concat(message);\n        });\n        messageArr.unshift('Multiple errors occurred during the request. Please see the `errors` array for complete details.\\n');\n        messageArr.push('\\n');\n      }\n\n      return messageArr.join('\\n');\n    }\n  }]);\n\n  return ApiError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nexports.ApiError = ApiError;\n/**\n * Custom error type for partial errors returned from the API.\n *\n * @param {object} b - Error object.\n */\n\nvar PartialFailureError = /*#__PURE__*/function (_Error2) {\n  _inherits(PartialFailureError, _Error2);\n\n  var _super2 = _createSuper(PartialFailureError);\n\n  function PartialFailureError(b) {\n    var _this2;\n\n    _classCallCheck(this, PartialFailureError);\n\n    _this2 = _super2.call(this);\n    var errorObject = b;\n    _this2.errors = errorObject.errors;\n    _this2.name = 'PartialFailureError';\n    _this2.response = errorObject.response;\n    _this2.message = ApiError.createMultiErrorMessage(errorObject, _this2.errors);\n    return _this2;\n  }\n\n  return PartialFailureError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nexports.PartialFailureError = PartialFailureError;\n\nvar Util = /*#__PURE__*/function () {\n  function Util() {\n    _classCallCheck(this, Util);\n\n    this.ApiError = ApiError;\n    this.PartialFailureError = PartialFailureError;\n  }\n  /**\n   * No op.\n   *\n   * @example\n   * function doSomething(callback) {\n   *   callback = callback || noop;\n   * }\n   */\n\n\n  _createClass(Util, [{\n    key: \"noop\",\n    value: function noop() {}\n    /**\n     * Uniformly process an API response.\n     *\n     * @param {*} err - Error value.\n     * @param {*} resp - Response value.\n     * @param {*} body - Body value.\n     * @param {function} callback - The callback function.\n     */\n\n  }, {\n    key: \"handleResp\",\n    value: function handleResp(err, resp, body, callback) {\n      callback = callback || util.noop;\n      var parsedResp = extend(true, {\n        err: err || null\n      }, resp && util.parseHttpRespMessage(resp), body && util.parseHttpRespBody(body)); // Assign the parsed body to resp.body, even if { json: false } was passed\n      // as a request option.\n      // We assume that nobody uses the previously unparsed value of resp.body.\n\n      if (!parsedResp.err && resp && typeof parsedResp.body === 'object') {\n        parsedResp.resp.body = parsedResp.body;\n      }\n\n      if (parsedResp.err && resp) {\n        parsedResp.err.response = resp;\n      }\n\n      callback(parsedResp.err, parsedResp.body, parsedResp.resp);\n    }\n    /**\n     * Sniff an incoming HTTP response message for errors.\n     *\n     * @param {object} httpRespMessage - An incoming HTTP response message from `request`.\n     * @return {object} parsedHttpRespMessage - The parsed response.\n     * @param {?error} parsedHttpRespMessage.err - An error detected.\n     * @param {object} parsedHttpRespMessage.resp - The original response object.\n     */\n\n  }, {\n    key: \"parseHttpRespMessage\",\n    value: function parseHttpRespMessage(httpRespMessage) {\n      var parsedHttpRespMessage = {\n        resp: httpRespMessage\n      };\n\n      if (httpRespMessage.statusCode < 200 || httpRespMessage.statusCode > 299) {\n        // Unknown error. Format according to ApiError standard.\n        parsedHttpRespMessage.err = new ApiError({\n          errors: new Array(),\n          code: httpRespMessage.statusCode,\n          message: httpRespMessage.statusMessage,\n          response: httpRespMessage\n        });\n      }\n\n      return parsedHttpRespMessage;\n    }\n    /**\n     * Parse the response body from an HTTP request.\n     *\n     * @param {object} body - The response body.\n     * @return {object} parsedHttpRespMessage - The parsed response.\n     * @param {?error} parsedHttpRespMessage.err - An error detected.\n     * @param {object} parsedHttpRespMessage.body - The original body value provided\n     *     will try to be JSON.parse'd. If it's successful, the parsed value will\n     * be returned here, otherwise the original value and an error will be returned.\n     */\n\n  }, {\n    key: \"parseHttpRespBody\",\n    value: function parseHttpRespBody(body) {\n      var parsedHttpRespBody = {\n        body: body\n      };\n\n      if (typeof body === 'string') {\n        try {\n          parsedHttpRespBody.body = JSON.parse(body);\n        } catch (err) {\n          parsedHttpRespBody.body = body;\n        }\n      }\n\n      if (parsedHttpRespBody.body && parsedHttpRespBody.body.error) {\n        // Error from JSON API.\n        parsedHttpRespBody.err = new ApiError(parsedHttpRespBody.body.error);\n      }\n\n      return parsedHttpRespBody;\n    }\n    /**\n     * Take a Duplexify stream, fetch an authenticated connection header, and\n     * create an outgoing writable stream.\n     *\n     * @param {Duplexify} dup - Duplexify stream.\n     * @param {object} options - Configuration object.\n     * @param {module:common/connection} options.connection - A connection instance used to get a token with and send the request through.\n     * @param {object} options.metadata - Metadata to send at the head of the request.\n     * @param {object} options.request - Request object, in the format of a standard Node.js http.request() object.\n     * @param {string=} options.request.method - Default: \"POST\".\n     * @param {string=} options.request.qs.uploadType - Default: \"multipart\".\n     * @param {string=} options.streamContentType - Default: \"application/octet-stream\".\n     * @param {function} onComplete - Callback, executed after the writable Request stream has completed.\n     */\n\n  }, {\n    key: \"makeWritableStream\",\n    value: function makeWritableStream(dup, options, onComplete) {\n      onComplete = onComplete || util.noop;\n      var writeStream = new ProgressStream();\n      writeStream.on('progress', function (evt) {\n        return dup.emit('progress', evt);\n      });\n      dup.setWritable(writeStream);\n      var defaultReqOpts = {\n        method: 'POST',\n        qs: {\n          uploadType: 'multipart'\n        },\n        timeout: 0,\n        maxRetries: 0\n      };\n      var metadata = options.metadata || {};\n      var reqOpts = extend(true, defaultReqOpts, options.request, {\n        multipart: [{\n          'Content-Type': 'application/json',\n          body: JSON.stringify(metadata)\n        }, {\n          'Content-Type': metadata.contentType || 'application/octet-stream',\n          body: writeStream\n        }]\n      });\n      options.makeAuthenticatedRequest(reqOpts, {\n        onAuthenticated: function onAuthenticated(err, authenticatedReqOpts) {\n          if (err) {\n            dup.destroy(err);\n            return;\n          }\n\n          var request = teeny_request_1.teenyRequest.defaults(requestDefaults);\n          request(authenticatedReqOpts, function (err, resp, body) {\n            util.handleResp(err, resp, body, function (err, data) {\n              if (err) {\n                dup.destroy(err);\n                return;\n              }\n\n              dup.emit('response', resp);\n              onComplete(data);\n            });\n          });\n        }\n      });\n    }\n    /**\n     * Returns true if the API request should be retried, given the error that was\n     * given the first time the request was attempted. This is used for rate limit\n     * related errors as well as intermittent server errors.\n     *\n     * @param {error} err - The API error to check if it is appropriate to retry.\n     * @return {boolean} True if the API request should be retried, false otherwise.\n     */\n\n  }, {\n    key: \"shouldRetryRequest\",\n    value: function shouldRetryRequest(err) {\n      if (err) {\n        if ([408, 429, 500, 502, 503].indexOf(err.code) !== -1) {\n          return true;\n        }\n\n        if (err.errors) {\n          var _iterator = _createForOfIteratorHelper(err.errors),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var e = _step.value;\n              var reason = e.reason;\n\n              if (reason === 'rateLimitExceeded') {\n                return true;\n              }\n\n              if (reason === 'userRateLimitExceeded') {\n                return true;\n              }\n\n              if (reason && reason.includes('EAI_AGAIN')) {\n                return true;\n              }\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        }\n      }\n\n      return false;\n    }\n    /**\n     * Get a function for making authenticated requests.\n     *\n     * @param {object} config - Configuration object.\n     * @param {boolean=} config.autoRetry - Automatically retry requests if the\n     *     response is related to rate limits or certain intermittent server\n     * errors. We will exponentially backoff subsequent requests by default.\n     * (default: true)\n     * @param {object=} config.credentials - Credentials object.\n     * @param {boolean=} config.customEndpoint - If true, just return the provided request options. Default: false.\n     * @param {string=} config.email - Account email address, required for PEM/P12 usage.\n     * @param {number=} config.maxRetries - Maximum number of automatic retries attempted before returning the error. (default: 3)\n     * @param {string=} config.keyFile - Path to a .json, .pem, or .p12 keyfile.\n     * @param {array} config.scopes - Array of scopes required for the API.\n     */\n\n  }, {\n    key: \"makeAuthenticatedRequestFactory\",\n    value: function makeAuthenticatedRequestFactory(config) {\n      var googleAutoAuthConfig = extend({}, config);\n\n      if (googleAutoAuthConfig.projectId === '{{projectId}}') {\n        delete googleAutoAuthConfig.projectId;\n      }\n\n      var authClient = googleAutoAuthConfig.authClient || new google_auth_library_1.GoogleAuth(googleAutoAuthConfig);\n\n      function makeAuthenticatedRequest(reqOpts, optionsOrCallback) {\n        var stream;\n        var reqConfig = extend({}, config);\n        var activeRequest_;\n\n        if (!optionsOrCallback) {\n          stream = duplexify();\n          reqConfig.stream = stream;\n        }\n\n        var options = typeof optionsOrCallback === 'object' ? optionsOrCallback : undefined;\n        var callback = typeof optionsOrCallback === 'function' ? optionsOrCallback : undefined;\n\n        var onAuthenticated = function onAuthenticated(err, authenticatedReqOpts) {\n          var authLibraryError = err;\n          var autoAuthFailed = err && err.message.indexOf('Could not load the default credentials') > -1;\n\n          if (autoAuthFailed) {\n            // Even though authentication failed, the API might not actually\n            // care.\n            authenticatedReqOpts = reqOpts;\n          }\n\n          if (!err || autoAuthFailed) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var projectId = authClient._cachedProjectId;\n\n            if (config.projectId && config.projectId !== '{{projectId}}') {\n              projectId = config.projectId;\n            }\n\n            try {\n              authenticatedReqOpts = util.decorateRequest(authenticatedReqOpts, projectId);\n              err = null;\n            } catch (e) {\n              // A projectId was required, but we don't have one.\n              // Re-use the \"Could not load the default credentials error\" if\n              // auto auth failed.\n              err = err || e;\n            }\n          }\n\n          if (err) {\n            if (stream) {\n              stream.destroy(err);\n            } else {\n              var fn = options && options.onAuthenticated ? options.onAuthenticated : callback;\n              fn(err);\n            }\n\n            return;\n          }\n\n          if (options && options.onAuthenticated) {\n            options.onAuthenticated(null, authenticatedReqOpts);\n          } else {\n            activeRequest_ = util.makeRequest(authenticatedReqOpts, reqConfig, function (apiResponseError) {\n              if (apiResponseError && apiResponseError.code === 401 && authLibraryError) {\n                // Re-use the \"Could not load the default credentials error\" if\n                // the API request failed due to missing credentials.\n                apiResponseError = authLibraryError;\n              }\n\n              for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n                params[_key - 1] = arguments[_key];\n              }\n\n              callback.apply(void 0, [apiResponseError].concat(params));\n            });\n          }\n        };\n\n        if (reqConfig.customEndpoint) {\n          // Using a custom API override. Do not use `google-auth-library` for\n          // authentication. (ex: connecting to a local Datastore server)\n          onAuthenticated(null, reqOpts);\n        } else {\n          authClient.authorizeRequest(reqOpts).then(function (res) {\n            var opts = extend(true, {}, reqOpts, res);\n            onAuthenticated(null, opts);\n          }, function (err) {\n            onAuthenticated(err);\n          });\n        }\n\n        if (stream) {\n          return stream;\n        }\n\n        return {\n          abort: function abort() {\n            setImmediate(function () {\n              if (activeRequest_) {\n                activeRequest_.abort();\n                activeRequest_ = null;\n              }\n            });\n          }\n        };\n      }\n\n      var mar = makeAuthenticatedRequest;\n      mar.getCredentials = authClient.getCredentials.bind(authClient);\n      mar.authClient = authClient;\n      return mar;\n    }\n    /**\n     * Make a request through the `retryRequest` module with built-in error\n     * handling and exponential back off.\n     *\n     * @param {object} reqOpts - Request options in the format `request` expects.\n     * @param {object=} config - Configuration object.\n     * @param {boolean=} config.autoRetry - Automatically retry requests if the\n     *     response is related to rate limits or certain intermittent server\n     * errors. We will exponentially backoff subsequent requests by default.\n     * (default: true)\n     * @param {number=} config.maxRetries - Maximum number of automatic retries\n     *     attempted before returning the error. (default: 3)\n     * @param {object=} config.request - HTTP module for request calls.\n     * @param {function} callback - The callback function.\n     */\n\n  }, {\n    key: \"makeRequest\",\n    value: function makeRequest(reqOpts, config, callback) {\n      var options = {\n        request: teeny_request_1.teenyRequest.defaults(requestDefaults),\n        retries: config.autoRetry !== false ? config.maxRetries || 3 : 0,\n        shouldRetryFn: function shouldRetryFn(httpRespMessage) {\n          var err = util.parseHttpRespMessage(httpRespMessage).err;\n          return err && util.shouldRetryRequest(err);\n        }\n      };\n\n      if (typeof reqOpts.maxRetries === 'number') {\n        options.retries = reqOpts.maxRetries;\n      }\n\n      if (!config.stream) {\n        return retryRequest(reqOpts, options, function (err, response, body) {\n          util.handleResp(err, response, body, callback);\n        });\n      }\n\n      var dup = config.stream; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      var requestStream;\n      var isGetRequest = (reqOpts.method || 'GET').toUpperCase() === 'GET';\n\n      if (isGetRequest) {\n        requestStream = retryRequest(reqOpts, options);\n        dup.setReadable(requestStream);\n      } else {\n        // Streaming writable HTTP requests cannot be retried.\n        requestStream = options.request(reqOpts);\n        dup.setWritable(requestStream);\n      } // Replay the Request events back to the stream.\n\n\n      requestStream.on('error', dup.destroy.bind(dup)).on('response', dup.emit.bind(dup, 'response')).on('complete', dup.emit.bind(dup, 'complete'));\n      dup.abort = requestStream.abort;\n      return dup;\n    }\n    /**\n     * Decorate the options about to be made in a request.\n     *\n     * @param {object} reqOpts - The options to be passed to `request`.\n     * @param {string} projectId - The project ID.\n     * @return {object} reqOpts - The decorated reqOpts.\n     */\n\n  }, {\n    key: \"decorateRequest\",\n    value: function decorateRequest(reqOpts, projectId) {\n      delete reqOpts.autoPaginate;\n      delete reqOpts.autoPaginateVal;\n      delete reqOpts.objectMode;\n\n      if (reqOpts.qs !== null && typeof reqOpts.qs === 'object') {\n        delete reqOpts.qs.autoPaginate;\n        delete reqOpts.qs.autoPaginateVal;\n        reqOpts.qs = projectify_1.replaceProjectIdToken(reqOpts.qs, projectId);\n      }\n\n      if (Array.isArray(reqOpts.multipart)) {\n        reqOpts.multipart = reqOpts.multipart.map(function (part) {\n          return projectify_1.replaceProjectIdToken(part, projectId);\n        });\n      }\n\n      if (reqOpts.json !== null && typeof reqOpts.json === 'object') {\n        delete reqOpts.json.autoPaginate;\n        delete reqOpts.json.autoPaginateVal;\n        reqOpts.json = projectify_1.replaceProjectIdToken(reqOpts.json, projectId);\n      }\n\n      reqOpts.uri = projectify_1.replaceProjectIdToken(reqOpts.uri, projectId);\n      return reqOpts;\n    } // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  }, {\n    key: \"isCustomType\",\n    value: function isCustomType(unknown, module) {\n      function getConstructorName(obj) {\n        return obj.constructor && obj.constructor.name.toLowerCase();\n      }\n\n      var moduleNameParts = module.split('/');\n      var parentModuleName = moduleNameParts[0] && moduleNameParts[0].toLowerCase();\n      var subModuleName = moduleNameParts[1] && moduleNameParts[1].toLowerCase();\n\n      if (subModuleName && getConstructorName(unknown) !== subModuleName) {\n        return false;\n      }\n\n      var walkingModule = unknown; // eslint-disable-next-line no-constant-condition\n\n      while (true) {\n        if (getConstructorName(walkingModule) === parentModuleName) {\n          return true;\n        }\n\n        walkingModule = walkingModule.parent;\n\n        if (!walkingModule) {\n          return false;\n        }\n      }\n    }\n    /**\n     * Create a properly-formatted User-Agent string from a package.json file.\n     *\n     * @param {object} packageJson - A module's package.json file.\n     * @return {string} userAgent - The formatted User-Agent string.\n     */\n\n  }, {\n    key: \"getUserAgentFromPackageJson\",\n    value: function getUserAgentFromPackageJson(packageJson) {\n      var hyphenatedPackageName = packageJson.name.replace('@google-cloud', 'gcloud-node') // For legacy purposes.\n      .replace('/', '-'); // For UA spec-compliance purposes.\n\n      return hyphenatedPackageName + '/' + packageJson.version;\n    }\n    /**\n     * Given two parameters, figure out if this is either:\n     *  - Just a callback function\n     *  - An options object, and then a callback function\n     * @param optionsOrCallback An options object or callback.\n     * @param cb A potentially undefined callback.\n     */\n\n  }, {\n    key: \"maybeOptionsOrCallback\",\n    value: function maybeOptionsOrCallback(optionsOrCallback, cb) {\n      return typeof optionsOrCallback === 'function' ? [{}, optionsOrCallback] : [optionsOrCallback, cb];\n    }\n  }]);\n\n  return Util;\n}();\n\nexports.Util = Util;\n/**\n * Basic Passthrough Stream that records the number of bytes read\n * every time the cursor is moved.\n */\n\nvar ProgressStream = /*#__PURE__*/function (_stream_1$Transform) {\n  _inherits(ProgressStream, _stream_1$Transform);\n\n  var _super3 = _createSuper(ProgressStream);\n\n  function ProgressStream() {\n    var _this3;\n\n    _classCallCheck(this, ProgressStream);\n\n    _this3 = _super3.apply(this, arguments);\n    _this3.bytesRead = 0;\n    return _this3;\n  } // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  _createClass(ProgressStream, [{\n    key: \"_transform\",\n    value: function _transform(chunk, encoding, callback) {\n      this.bytesRead += chunk.length;\n      this.emit('progress', {\n        bytesWritten: this.bytesRead,\n        contentLength: '*'\n      });\n      this.push(chunk);\n      callback();\n    }\n  }]);\n\n  return ProgressStream;\n}(stream_1.Transform);\n\nvar util = new Util();\nexports.util = util;","map":{"version":3,"sources":["C:/Users/Zack/Desktop/rms-home/node_modules/@google-cloud/common/build/src/util.js"],"names":["Object","defineProperty","exports","value","projectify_1","require","ent","extend","google_auth_library_1","retryRequest","stream_1","teeny_request_1","duplexify","requestDefaults","timeout","gzip","forever","pool","maxSockets","Infinity","ApiError","errorBodyOrMessage","message","errorBody","code","errors","response","JSON","parse","body","error","e","createMultiErrorMessage","Error","captureStackTrace","err","messages","Set","add","length","forEach","decode","toString","messageArr","Array","from","map","i","unshift","push","join","PartialFailureError","b","errorObject","name","Util","resp","callback","util","noop","parsedResp","parseHttpRespMessage","parseHttpRespBody","httpRespMessage","parsedHttpRespMessage","statusCode","statusMessage","parsedHttpRespBody","dup","options","onComplete","writeStream","ProgressStream","on","evt","emit","setWritable","defaultReqOpts","method","qs","uploadType","maxRetries","metadata","reqOpts","request","multipart","stringify","contentType","makeAuthenticatedRequest","onAuthenticated","authenticatedReqOpts","destroy","teenyRequest","defaults","handleResp","data","indexOf","reason","includes","config","googleAutoAuthConfig","projectId","authClient","GoogleAuth","optionsOrCallback","stream","reqConfig","activeRequest_","undefined","authLibraryError","autoAuthFailed","_cachedProjectId","decorateRequest","fn","makeRequest","apiResponseError","params","customEndpoint","authorizeRequest","then","res","opts","abort","setImmediate","mar","getCredentials","bind","retries","autoRetry","shouldRetryFn","shouldRetryRequest","requestStream","isGetRequest","toUpperCase","setReadable","autoPaginate","autoPaginateVal","objectMode","replaceProjectIdToken","isArray","part","json","uri","unknown","module","getConstructorName","obj","constructor","toLowerCase","moduleNameParts","split","parentModuleName","subModuleName","walkingModule","parent","packageJson","hyphenatedPackageName","replace","version","cb","arguments","bytesRead","chunk","encoding","bytesWritten","contentLength","Transform"],"mappings":"AAAA,a,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACA;AACA;AACA;;AACA,IAAMC,YAAY,GAAGC,OAAO,CAAC,0BAAD,CAA5B;;AACA,IAAMC,GAAG,GAAGD,OAAO,CAAC,KAAD,CAAnB;;AACA,IAAME,MAAM,GAAGF,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMG,qBAAqB,GAAGH,OAAO,CAAC,qBAAD,CAArC;;AACA,IAAMI,YAAY,GAAGJ,OAAO,CAAC,eAAD,CAA5B;;AACA,IAAMK,QAAQ,GAAGL,OAAO,CAAC,QAAD,CAAxB;;AACA,IAAMM,eAAe,GAAGN,OAAO,CAAC,eAAD,CAA/B,C,CACA;;;AACA,IAAMO,SAAS,GAAGP,OAAO,CAAC,WAAD,CAAzB;;AACA,IAAMQ,eAAe,GAAG;AACpBC,EAAAA,OAAO,EAAE,KADW;AAEpBC,EAAAA,IAAI,EAAE,IAFc;AAGpBC,EAAAA,OAAO,EAAE,IAHW;AAIpBC,EAAAA,IAAI,EAAE;AACFC,IAAAA,UAAU,EAAEC;AADV;AAJc,CAAxB;AAQA;AACA;AACA;AACA;AACA;;IACMC,Q;;;;;AACF,oBAAYC,kBAAZ,EAAgC;AAAA;;AAAA;;AAC5B;;AACA,QAAI,OAAOA,kBAAP,KAA8B,QAAlC,EAA4C;AACxC,YAAKC,OAAL,GAAeD,kBAAkB,IAAI,EAArC;AACA;AACH;;AACD,QAAME,SAAS,GAAGF,kBAAlB;AACA,UAAKG,IAAL,GAAYD,SAAS,CAACC,IAAtB;AACA,UAAKC,MAAL,GAAcF,SAAS,CAACE,MAAxB;AACA,UAAKC,QAAL,GAAgBH,SAAS,CAACG,QAA1B;;AACA,QAAI;AACA,YAAKD,MAAL,GAAcE,IAAI,CAACC,KAAL,CAAW,MAAKF,QAAL,CAAcG,IAAzB,EAA+BC,KAA/B,CAAqCL,MAAnD;AACH,KAFD,CAGA,OAAOM,CAAP,EAAU;AACN,YAAKN,MAAL,GAAcF,SAAS,CAACE,MAAxB;AACH;;AACD,UAAKH,OAAL,GAAeF,QAAQ,CAACY,uBAAT,CAAiCT,SAAjC,EAA4C,MAAKE,MAAjD,CAAf;AACAQ,IAAAA,KAAK,CAACC,iBAAN;AAjB4B;AAkB/B;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;WACI,iCAA+BC,GAA/B,EAAoCV,MAApC,EAA4C;AACxC,UAAMW,QAAQ,GAAG,IAAIC,GAAJ,EAAjB;;AACA,UAAIF,GAAG,CAACb,OAAR,EAAiB;AACbc,QAAAA,QAAQ,CAACE,GAAT,CAAaH,GAAG,CAACb,OAAjB;AACH;;AACD,UAAIG,MAAM,IAAIA,MAAM,CAACc,MAArB,EAA6B;AACzBd,QAAAA,MAAM,CAACe,OAAP,CAAe;AAAA,cAAGlB,OAAH,QAAGA,OAAH;AAAA,iBAAiBc,QAAQ,CAACE,GAAT,CAAahB,OAAb,CAAjB;AAAA,SAAf;AACH,OAFD,MAGK,IAAIa,GAAG,CAACT,QAAJ,IAAgBS,GAAG,CAACT,QAAJ,CAAaG,IAAjC,EAAuC;AACxCO,QAAAA,QAAQ,CAACE,GAAT,CAAahC,GAAG,CAACmC,MAAJ,CAAWN,GAAG,CAACT,QAAJ,CAAaG,IAAb,CAAkBa,QAAlB,EAAX,CAAb;AACH,OAFI,MAGA,IAAI,CAACP,GAAG,CAACb,OAAT,EAAkB;AACnBc,QAAAA,QAAQ,CAACE,GAAT,CAAa,yCAAb;AACH;;AACD,UAAIK,UAAU,GAAGC,KAAK,CAACC,IAAN,CAAWT,QAAX,CAAjB;;AACA,UAAIO,UAAU,CAACJ,MAAX,GAAoB,CAAxB,EAA2B;AACvBI,QAAAA,UAAU,GAAGA,UAAU,CAACG,GAAX,CAAe,UAACxB,OAAD,EAAUyB,CAAV;AAAA,+BAAuBA,CAAC,GAAG,CAA3B,eAAiCzB,OAAjC;AAAA,SAAf,CAAb;AACAqB,QAAAA,UAAU,CAACK,OAAX,CAAmB,oGAAnB;AACAL,QAAAA,UAAU,CAACM,IAAX,CAAgB,IAAhB;AACH;;AACD,aAAON,UAAU,CAACO,IAAX,CAAgB,IAAhB,CAAP;AACH;;;;iCAnDkBjB,K;;AAqDvB/B,OAAO,CAACkB,QAAR,GAAmBA,QAAnB;AACA;AACA;AACA;AACA;AACA;;IACM+B,mB;;;;;AACF,+BAAYC,CAAZ,EAAe;AAAA;;AAAA;;AACX;AACA,QAAMC,WAAW,GAAGD,CAApB;AACA,WAAK3B,MAAL,GAAc4B,WAAW,CAAC5B,MAA1B;AACA,WAAK6B,IAAL,GAAY,qBAAZ;AACA,WAAK5B,QAAL,GAAgB2B,WAAW,CAAC3B,QAA5B;AACA,WAAKJ,OAAL,GAAeF,QAAQ,CAACY,uBAAT,CAAiCqB,WAAjC,EAA8C,OAAK5B,MAAnD,CAAf;AANW;AAOd;;;iCAR6BQ,K;;AAUlC/B,OAAO,CAACiD,mBAAR,GAA8BA,mBAA9B;;IACMI,I;AACF,kBAAc;AAAA;;AACV,SAAKnC,QAAL,GAAgBA,QAAhB;AACA,SAAK+B,mBAAL,GAA2BA,mBAA3B;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;;;WACI,gBAAO,CAAG;AACV;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,oBAAWhB,GAAX,EAAgBqB,IAAhB,EAAsB3B,IAAtB,EAA4B4B,QAA5B,EAAsC;AAClCA,MAAAA,QAAQ,GAAGA,QAAQ,IAAIC,IAAI,CAACC,IAA5B;AACA,UAAMC,UAAU,GAAGrD,MAAM,CAAC,IAAD,EAAO;AAAE4B,QAAAA,GAAG,EAAEA,GAAG,IAAI;AAAd,OAAP,EAA6BqB,IAAI,IAAIE,IAAI,CAACG,oBAAL,CAA0BL,IAA1B,CAArC,EAAsE3B,IAAI,IAAI6B,IAAI,CAACI,iBAAL,CAAuBjC,IAAvB,CAA9E,CAAzB,CAFkC,CAGlC;AACA;AACA;;AACA,UAAI,CAAC+B,UAAU,CAACzB,GAAZ,IAAmBqB,IAAnB,IAA2B,OAAOI,UAAU,CAAC/B,IAAlB,KAA2B,QAA1D,EAAoE;AAChE+B,QAAAA,UAAU,CAACJ,IAAX,CAAgB3B,IAAhB,GAAuB+B,UAAU,CAAC/B,IAAlC;AACH;;AACD,UAAI+B,UAAU,CAACzB,GAAX,IAAkBqB,IAAtB,EAA4B;AACxBI,QAAAA,UAAU,CAACzB,GAAX,CAAeT,QAAf,GAA0B8B,IAA1B;AACH;;AACDC,MAAAA,QAAQ,CAACG,UAAU,CAACzB,GAAZ,EAAiByB,UAAU,CAAC/B,IAA5B,EAAkC+B,UAAU,CAACJ,IAA7C,CAAR;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,8BAAqBO,eAArB,EAAsC;AAClC,UAAMC,qBAAqB,GAAG;AAC1BR,QAAAA,IAAI,EAAEO;AADoB,OAA9B;;AAGA,UAAIA,eAAe,CAACE,UAAhB,GAA6B,GAA7B,IAAoCF,eAAe,CAACE,UAAhB,GAA6B,GAArE,EAA0E;AACtE;AACAD,QAAAA,qBAAqB,CAAC7B,GAAtB,GAA4B,IAAIf,QAAJ,CAAa;AACrCK,UAAAA,MAAM,EAAE,IAAImB,KAAJ,EAD6B;AAErCpB,UAAAA,IAAI,EAAEuC,eAAe,CAACE,UAFe;AAGrC3C,UAAAA,OAAO,EAAEyC,eAAe,CAACG,aAHY;AAIrCxC,UAAAA,QAAQ,EAAEqC;AAJ2B,SAAb,CAA5B;AAMH;;AACD,aAAOC,qBAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,2BAAkBnC,IAAlB,EAAwB;AACpB,UAAMsC,kBAAkB,GAAG;AACvBtC,QAAAA,IAAI,EAAJA;AADuB,OAA3B;;AAGA,UAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC1B,YAAI;AACAsC,UAAAA,kBAAkB,CAACtC,IAAnB,GAA0BF,IAAI,CAACC,KAAL,CAAWC,IAAX,CAA1B;AACH,SAFD,CAGA,OAAOM,GAAP,EAAY;AACRgC,UAAAA,kBAAkB,CAACtC,IAAnB,GAA0BA,IAA1B;AACH;AACJ;;AACD,UAAIsC,kBAAkB,CAACtC,IAAnB,IAA2BsC,kBAAkB,CAACtC,IAAnB,CAAwBC,KAAvD,EAA8D;AAC1D;AACAqC,QAAAA,kBAAkB,CAAChC,GAAnB,GAAyB,IAAIf,QAAJ,CAAa+C,kBAAkB,CAACtC,IAAnB,CAAwBC,KAArC,CAAzB;AACH;;AACD,aAAOqC,kBAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,4BAAmBC,GAAnB,EAAwBC,OAAxB,EAAiCC,UAAjC,EAA6C;AACzCA,MAAAA,UAAU,GAAGA,UAAU,IAAIZ,IAAI,CAACC,IAAhC;AACA,UAAMY,WAAW,GAAG,IAAIC,cAAJ,EAApB;AACAD,MAAAA,WAAW,CAACE,EAAZ,CAAe,UAAf,EAA2B,UAAAC,GAAG;AAAA,eAAIN,GAAG,CAACO,IAAJ,CAAS,UAAT,EAAqBD,GAArB,CAAJ;AAAA,OAA9B;AACAN,MAAAA,GAAG,CAACQ,WAAJ,CAAgBL,WAAhB;AACA,UAAMM,cAAc,GAAG;AACnBC,QAAAA,MAAM,EAAE,MADW;AAEnBC,QAAAA,EAAE,EAAE;AACAC,UAAAA,UAAU,EAAE;AADZ,SAFe;AAKnBlE,QAAAA,OAAO,EAAE,CALU;AAMnBmE,QAAAA,UAAU,EAAE;AANO,OAAvB;AAQA,UAAMC,QAAQ,GAAGb,OAAO,CAACa,QAAR,IAAoB,EAArC;AACA,UAAMC,OAAO,GAAG5E,MAAM,CAAC,IAAD,EAAOsE,cAAP,EAAuBR,OAAO,CAACe,OAA/B,EAAwC;AAC1DC,QAAAA,SAAS,EAAE,CACP;AACI,0BAAgB,kBADpB;AAEIxD,UAAAA,IAAI,EAAEF,IAAI,CAAC2D,SAAL,CAAeJ,QAAf;AAFV,SADO,EAKP;AACI,0BAAgBA,QAAQ,CAACK,WAAT,IAAwB,0BAD5C;AAEI1D,UAAAA,IAAI,EAAE0C;AAFV,SALO;AAD+C,OAAxC,CAAtB;AAYAF,MAAAA,OAAO,CAACmB,wBAAR,CAAiCL,OAAjC,EAA0C;AACtCM,QAAAA,eADsC,2BACtBtD,GADsB,EACjBuD,oBADiB,EACK;AACvC,cAAIvD,GAAJ,EAAS;AACLiC,YAAAA,GAAG,CAACuB,OAAJ,CAAYxD,GAAZ;AACA;AACH;;AACD,cAAMiD,OAAO,GAAGzE,eAAe,CAACiF,YAAhB,CAA6BC,QAA7B,CAAsChF,eAAtC,CAAhB;AACAuE,UAAAA,OAAO,CAACM,oBAAD,EAAuB,UAACvD,GAAD,EAAMqB,IAAN,EAAY3B,IAAZ,EAAqB;AAC/C6B,YAAAA,IAAI,CAACoC,UAAL,CAAgB3D,GAAhB,EAAqBqB,IAArB,EAA2B3B,IAA3B,EAAiC,UAACM,GAAD,EAAM4D,IAAN,EAAe;AAC5C,kBAAI5D,GAAJ,EAAS;AACLiC,gBAAAA,GAAG,CAACuB,OAAJ,CAAYxD,GAAZ;AACA;AACH;;AACDiC,cAAAA,GAAG,CAACO,IAAJ,CAAS,UAAT,EAAqBnB,IAArB;AACAc,cAAAA,UAAU,CAACyB,IAAD,CAAV;AACH,aAPD;AAQH,WATM,CAAP;AAUH;AAjBqC,OAA1C;AAmBH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,4BAAmB5D,GAAnB,EAAwB;AACpB,UAAIA,GAAJ,EAAS;AACL,YAAI,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B6D,OAA1B,CAAkC7D,GAAG,CAACX,IAAtC,MAAgD,CAAC,CAArD,EAAwD;AACpD,iBAAO,IAAP;AACH;;AACD,YAAIW,GAAG,CAACV,MAAR,EAAgB;AAAA,qDACIU,GAAG,CAACV,MADR;AAAA;;AAAA;AACZ,gEAA4B;AAAA,kBAAjBM,CAAiB;AACxB,kBAAMkE,MAAM,GAAGlE,CAAC,CAACkE,MAAjB;;AACA,kBAAIA,MAAM,KAAK,mBAAf,EAAoC;AAChC,uBAAO,IAAP;AACH;;AACD,kBAAIA,MAAM,KAAK,uBAAf,EAAwC;AACpC,uBAAO,IAAP;AACH;;AACD,kBAAIA,MAAM,IAAIA,MAAM,CAACC,QAAP,CAAgB,WAAhB,CAAd,EAA4C;AACxC,uBAAO,IAAP;AACH;AACJ;AAZW;AAAA;AAAA;AAAA;AAAA;AAaf;AACJ;;AACD,aAAO,KAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,yCAAgCC,MAAhC,EAAwC;AACpC,UAAMC,oBAAoB,GAAG7F,MAAM,CAAC,EAAD,EAAK4F,MAAL,CAAnC;;AACA,UAAIC,oBAAoB,CAACC,SAArB,KAAmC,eAAvC,EAAwD;AACpD,eAAOD,oBAAoB,CAACC,SAA5B;AACH;;AACD,UAAMC,UAAU,GAAGF,oBAAoB,CAACE,UAArB,IAAmC,IAAI9F,qBAAqB,CAAC+F,UAA1B,CAAqCH,oBAArC,CAAtD;;AACA,eAASZ,wBAAT,CAAkCL,OAAlC,EAA2CqB,iBAA3C,EAA8D;AAC1D,YAAIC,MAAJ;AACA,YAAMC,SAAS,GAAGnG,MAAM,CAAC,EAAD,EAAK4F,MAAL,CAAxB;AACA,YAAIQ,cAAJ;;AACA,YAAI,CAACH,iBAAL,EAAwB;AACpBC,UAAAA,MAAM,GAAG7F,SAAS,EAAlB;AACA8F,UAAAA,SAAS,CAACD,MAAV,GAAmBA,MAAnB;AACH;;AACD,YAAMpC,OAAO,GAAG,OAAOmC,iBAAP,KAA6B,QAA7B,GAAwCA,iBAAxC,GAA4DI,SAA5E;AACA,YAAMnD,QAAQ,GAAG,OAAO+C,iBAAP,KAA6B,UAA7B,GAA0CA,iBAA1C,GAA8DI,SAA/E;;AACA,YAAMnB,eAAe,GAAG,SAAlBA,eAAkB,CAACtD,GAAD,EAAMuD,oBAAN,EAA+B;AACnD,cAAMmB,gBAAgB,GAAG1E,GAAzB;AACA,cAAM2E,cAAc,GAAG3E,GAAG,IACtBA,GAAG,CAACb,OAAJ,CAAY0E,OAAZ,CAAoB,wCAApB,IAAgE,CAAC,CADrE;;AAEA,cAAIc,cAAJ,EAAoB;AAChB;AACA;AACApB,YAAAA,oBAAoB,GAAGP,OAAvB;AACH;;AACD,cAAI,CAAChD,GAAD,IAAQ2E,cAAZ,EAA4B;AACxB;AACA,gBAAIT,SAAS,GAAGC,UAAU,CAACS,gBAA3B;;AACA,gBAAIZ,MAAM,CAACE,SAAP,IAAoBF,MAAM,CAACE,SAAP,KAAqB,eAA7C,EAA8D;AAC1DA,cAAAA,SAAS,GAAGF,MAAM,CAACE,SAAnB;AACH;;AACD,gBAAI;AACAX,cAAAA,oBAAoB,GAAGhC,IAAI,CAACsD,eAAL,CAAqBtB,oBAArB,EAA2CW,SAA3C,CAAvB;AACAlE,cAAAA,GAAG,GAAG,IAAN;AACH,aAHD,CAIA,OAAOJ,CAAP,EAAU;AACN;AACA;AACA;AACAI,cAAAA,GAAG,GAAGA,GAAG,IAAIJ,CAAb;AACH;AACJ;;AACD,cAAII,GAAJ,EAAS;AACL,gBAAIsE,MAAJ,EAAY;AACRA,cAAAA,MAAM,CAACd,OAAP,CAAexD,GAAf;AACH,aAFD,MAGK;AACD,kBAAM8E,EAAE,GAAG5C,OAAO,IAAIA,OAAO,CAACoB,eAAnB,GACLpB,OAAO,CAACoB,eADH,GAELhC,QAFN;AAGAwD,cAAAA,EAAE,CAAC9E,GAAD,CAAF;AACH;;AACD;AACH;;AACD,cAAIkC,OAAO,IAAIA,OAAO,CAACoB,eAAvB,EAAwC;AACpCpB,YAAAA,OAAO,CAACoB,eAAR,CAAwB,IAAxB,EAA8BC,oBAA9B;AACH,WAFD,MAGK;AACDiB,YAAAA,cAAc,GAAGjD,IAAI,CAACwD,WAAL,CAAiBxB,oBAAjB,EAAuCgB,SAAvC,EAAkD,UAACS,gBAAD,EAAiC;AAChG,kBAAIA,gBAAgB,IAChBA,gBAAgB,CAAC3F,IAAjB,KAA0B,GAD1B,IAEAqF,gBAFJ,EAEsB;AAClB;AACA;AACAM,gBAAAA,gBAAgB,GAAGN,gBAAnB;AACH;;AAP+F,gDAAXO,MAAW;AAAXA,gBAAAA,MAAW;AAAA;;AAQhG3D,cAAAA,QAAQ,MAAR,UAAS0D,gBAAT,SAA8BC,MAA9B;AACH,aATgB,CAAjB;AAUH;AACJ,SArDD;;AAsDA,YAAIV,SAAS,CAACW,cAAd,EAA8B;AAC1B;AACA;AACA5B,UAAAA,eAAe,CAAC,IAAD,EAAON,OAAP,CAAf;AACH,SAJD,MAKK;AACDmB,UAAAA,UAAU,CAACgB,gBAAX,CAA4BnC,OAA5B,EAAqCoC,IAArC,CAA0C,UAAAC,GAAG,EAAI;AAC7C,gBAAMC,IAAI,GAAGlH,MAAM,CAAC,IAAD,EAAO,EAAP,EAAW4E,OAAX,EAAoBqC,GAApB,CAAnB;AACA/B,YAAAA,eAAe,CAAC,IAAD,EAAOgC,IAAP,CAAf;AACH,WAHD,EAGG,UAAAtF,GAAG,EAAI;AACNsD,YAAAA,eAAe,CAACtD,GAAD,CAAf;AACH,WALD;AAMH;;AACD,YAAIsE,MAAJ,EAAY;AACR,iBAAOA,MAAP;AACH;;AACD,eAAO;AACHiB,UAAAA,KADG,mBACK;AACJC,YAAAA,YAAY,CAAC,YAAM;AACf,kBAAIhB,cAAJ,EAAoB;AAChBA,gBAAAA,cAAc,CAACe,KAAf;AACAf,gBAAAA,cAAc,GAAG,IAAjB;AACH;AACJ,aALW,CAAZ;AAMH;AARE,SAAP;AAUH;;AACD,UAAMiB,GAAG,GAAGpC,wBAAZ;AACAoC,MAAAA,GAAG,CAACC,cAAJ,GAAqBvB,UAAU,CAACuB,cAAX,CAA0BC,IAA1B,CAA+BxB,UAA/B,CAArB;AACAsB,MAAAA,GAAG,CAACtB,UAAJ,GAAiBA,UAAjB;AACA,aAAOsB,GAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,qBAAYzC,OAAZ,EAAqBgB,MAArB,EAA6B1C,QAA7B,EAAuC;AACnC,UAAMY,OAAO,GAAG;AACZe,QAAAA,OAAO,EAAEzE,eAAe,CAACiF,YAAhB,CAA6BC,QAA7B,CAAsChF,eAAtC,CADG;AAEZkH,QAAAA,OAAO,EAAE5B,MAAM,CAAC6B,SAAP,KAAqB,KAArB,GAA6B7B,MAAM,CAAClB,UAAP,IAAqB,CAAlD,GAAsD,CAFnD;AAGZgD,QAAAA,aAHY,yBAGElE,eAHF,EAGmB;AAC3B,cAAM5B,GAAG,GAAGuB,IAAI,CAACG,oBAAL,CAA0BE,eAA1B,EAA2C5B,GAAvD;AACA,iBAAOA,GAAG,IAAIuB,IAAI,CAACwE,kBAAL,CAAwB/F,GAAxB,CAAd;AACH;AANW,OAAhB;;AAQA,UAAI,OAAOgD,OAAO,CAACF,UAAf,KAA8B,QAAlC,EAA4C;AACxCZ,QAAAA,OAAO,CAAC0D,OAAR,GAAkB5C,OAAO,CAACF,UAA1B;AACH;;AACD,UAAI,CAACkB,MAAM,CAACM,MAAZ,EAAoB;AAChB,eAAOhG,YAAY,CAAC0E,OAAD,EAAUd,OAAV,EAAmB,UAAClC,GAAD,EAAMT,QAAN,EAAgBG,IAAhB,EAAyB;AAC3D6B,UAAAA,IAAI,CAACoC,UAAL,CAAgB3D,GAAhB,EAAqBT,QAArB,EAA+BG,IAA/B,EAAqC4B,QAArC;AACH,SAFkB,CAAnB;AAGH;;AACD,UAAMW,GAAG,GAAG+B,MAAM,CAACM,MAAnB,CAjBmC,CAkBnC;;AACA,UAAI0B,aAAJ;AACA,UAAMC,YAAY,GAAG,CAACjD,OAAO,CAACL,MAAR,IAAkB,KAAnB,EAA0BuD,WAA1B,OAA4C,KAAjE;;AACA,UAAID,YAAJ,EAAkB;AACdD,QAAAA,aAAa,GAAG1H,YAAY,CAAC0E,OAAD,EAAUd,OAAV,CAA5B;AACAD,QAAAA,GAAG,CAACkE,WAAJ,CAAgBH,aAAhB;AACH,OAHD,MAIK;AACD;AACAA,QAAAA,aAAa,GAAG9D,OAAO,CAACe,OAAR,CAAgBD,OAAhB,CAAhB;AACAf,QAAAA,GAAG,CAACQ,WAAJ,CAAgBuD,aAAhB;AACH,OA7BkC,CA8BnC;;;AACAA,MAAAA,aAAa,CACR1D,EADL,CACQ,OADR,EACiBL,GAAG,CAACuB,OAAJ,CAAYmC,IAAZ,CAAiB1D,GAAjB,CADjB,EAEKK,EAFL,CAEQ,UAFR,EAEoBL,GAAG,CAACO,IAAJ,CAASmD,IAAT,CAAc1D,GAAd,EAAmB,UAAnB,CAFpB,EAGKK,EAHL,CAGQ,UAHR,EAGoBL,GAAG,CAACO,IAAJ,CAASmD,IAAT,CAAc1D,GAAd,EAAmB,UAAnB,CAHpB;AAIAA,MAAAA,GAAG,CAACsD,KAAJ,GAAYS,aAAa,CAACT,KAA1B;AACA,aAAOtD,GAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;;WACI,yBAAgBe,OAAhB,EAAyBkB,SAAzB,EAAoC;AAChC,aAAOlB,OAAO,CAACoD,YAAf;AACA,aAAOpD,OAAO,CAACqD,eAAf;AACA,aAAOrD,OAAO,CAACsD,UAAf;;AACA,UAAItD,OAAO,CAACJ,EAAR,KAAe,IAAf,IAAuB,OAAOI,OAAO,CAACJ,EAAf,KAAsB,QAAjD,EAA2D;AACvD,eAAOI,OAAO,CAACJ,EAAR,CAAWwD,YAAlB;AACA,eAAOpD,OAAO,CAACJ,EAAR,CAAWyD,eAAlB;AACArD,QAAAA,OAAO,CAACJ,EAAR,GAAa3E,YAAY,CAACsI,qBAAb,CAAmCvD,OAAO,CAACJ,EAA3C,EAA+CsB,SAA/C,CAAb;AACH;;AACD,UAAIzD,KAAK,CAAC+F,OAAN,CAAcxD,OAAO,CAACE,SAAtB,CAAJ,EAAsC;AAClCF,QAAAA,OAAO,CAACE,SAAR,GAAoBF,OAAO,CAACE,SAAR,CAAkBvC,GAAlB,CAAsB,UAAA8F,IAAI,EAAI;AAC9C,iBAAOxI,YAAY,CAACsI,qBAAb,CAAmCE,IAAnC,EAAyCvC,SAAzC,CAAP;AACH,SAFmB,CAApB;AAGH;;AACD,UAAIlB,OAAO,CAAC0D,IAAR,KAAiB,IAAjB,IAAyB,OAAO1D,OAAO,CAAC0D,IAAf,KAAwB,QAArD,EAA+D;AAC3D,eAAO1D,OAAO,CAAC0D,IAAR,CAAaN,YAApB;AACA,eAAOpD,OAAO,CAAC0D,IAAR,CAAaL,eAApB;AACArD,QAAAA,OAAO,CAAC0D,IAAR,GAAezI,YAAY,CAACsI,qBAAb,CAAmCvD,OAAO,CAAC0D,IAA3C,EAAiDxC,SAAjD,CAAf;AACH;;AACDlB,MAAAA,OAAO,CAAC2D,GAAR,GAAc1I,YAAY,CAACsI,qBAAb,CAAmCvD,OAAO,CAAC2D,GAA3C,EAAgDzC,SAAhD,CAAd;AACA,aAAOlB,OAAP;AACH,K,CACD;;;;WACA,sBAAa4D,OAAb,EAAsBC,MAAtB,EAA8B;AAC1B,eAASC,kBAAT,CAA4BC,GAA5B,EAAiC;AAC7B,eAAOA,GAAG,CAACC,WAAJ,IAAmBD,GAAG,CAACC,WAAJ,CAAgB7F,IAAhB,CAAqB8F,WAArB,EAA1B;AACH;;AACD,UAAMC,eAAe,GAAGL,MAAM,CAACM,KAAP,CAAa,GAAb,CAAxB;AACA,UAAMC,gBAAgB,GAAGF,eAAe,CAAC,CAAD,CAAf,IAAsBA,eAAe,CAAC,CAAD,CAAf,CAAmBD,WAAnB,EAA/C;AACA,UAAMI,aAAa,GAAGH,eAAe,CAAC,CAAD,CAAf,IAAsBA,eAAe,CAAC,CAAD,CAAf,CAAmBD,WAAnB,EAA5C;;AACA,UAAII,aAAa,IAAIP,kBAAkB,CAACF,OAAD,CAAlB,KAAgCS,aAArD,EAAoE;AAChE,eAAO,KAAP;AACH;;AACD,UAAIC,aAAa,GAAGV,OAApB,CAV0B,CAW1B;;AACA,aAAO,IAAP,EAAa;AACT,YAAIE,kBAAkB,CAACQ,aAAD,CAAlB,KAAsCF,gBAA1C,EAA4D;AACxD,iBAAO,IAAP;AACH;;AACDE,QAAAA,aAAa,GAAGA,aAAa,CAACC,MAA9B;;AACA,YAAI,CAACD,aAAL,EAAoB;AAChB,iBAAO,KAAP;AACH;AACJ;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;;;;WACI,qCAA4BE,WAA5B,EAAyC;AACrC,UAAMC,qBAAqB,GAAGD,WAAW,CAACrG,IAAZ,CACzBuG,OADyB,CACjB,eADiB,EACA,aADA,EACe;AADf,OAEzBA,OAFyB,CAEjB,GAFiB,EAEZ,GAFY,CAA9B,CADqC,CAGb;;AACxB,aAAOD,qBAAqB,GAAG,GAAxB,GAA8BD,WAAW,CAACG,OAAjD;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;;WACI,gCAAuBtD,iBAAvB,EAA0CuD,EAA1C,EAA8C;AAC1C,aAAO,OAAOvD,iBAAP,KAA6B,UAA7B,GACD,CAAC,EAAD,EAAKA,iBAAL,CADC,GAED,CAACA,iBAAD,EAAoBuD,EAApB,CAFN;AAGH;;;;;;AAEL7J,OAAO,CAACqD,IAAR,GAAeA,IAAf;AACA;AACA;AACA;AACA;;IACMiB,c;;;;;AACF,4BAAc;AAAA;;AAAA;;AACV,iCAASwF,SAAT;AACA,WAAKC,SAAL,GAAiB,CAAjB;AAFU;AAGb,G,CACD;;;;;WACA,oBAAWC,KAAX,EAAkBC,QAAlB,EAA4B1G,QAA5B,EAAsC;AAClC,WAAKwG,SAAL,IAAkBC,KAAK,CAAC3H,MAAxB;AACA,WAAKoC,IAAL,CAAU,UAAV,EAAsB;AAAEyF,QAAAA,YAAY,EAAE,KAAKH,SAArB;AAAgCI,QAAAA,aAAa,EAAE;AAA/C,OAAtB;AACA,WAAKpH,IAAL,CAAUiH,KAAV;AACAzG,MAAAA,QAAQ;AACX;;;;EAXwB/C,QAAQ,CAAC4J,S;;AAatC,IAAM5G,IAAI,GAAG,IAAIH,IAAJ,EAAb;AACArD,OAAO,CAACwD,IAAR,GAAeA,IAAf","sourcesContent":["\"use strict\";\n// Copyright 2014 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*!\n * @module common/util\n */\nconst projectify_1 = require(\"@google-cloud/projectify\");\nconst ent = require(\"ent\");\nconst extend = require(\"extend\");\nconst google_auth_library_1 = require(\"google-auth-library\");\nconst retryRequest = require(\"retry-request\");\nconst stream_1 = require(\"stream\");\nconst teeny_request_1 = require(\"teeny-request\");\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst duplexify = require('duplexify');\nconst requestDefaults = {\n    timeout: 60000,\n    gzip: true,\n    forever: true,\n    pool: {\n        maxSockets: Infinity,\n    },\n};\n/**\n * Custom error type for API errors.\n *\n * @param {object} errorBody - Error object.\n */\nclass ApiError extends Error {\n    constructor(errorBodyOrMessage) {\n        super();\n        if (typeof errorBodyOrMessage !== 'object') {\n            this.message = errorBodyOrMessage || '';\n            return;\n        }\n        const errorBody = errorBodyOrMessage;\n        this.code = errorBody.code;\n        this.errors = errorBody.errors;\n        this.response = errorBody.response;\n        try {\n            this.errors = JSON.parse(this.response.body).error.errors;\n        }\n        catch (e) {\n            this.errors = errorBody.errors;\n        }\n        this.message = ApiError.createMultiErrorMessage(errorBody, this.errors);\n        Error.captureStackTrace(this);\n    }\n    /**\n     * Pieces together an error message by combining all unique error messages\n     * returned from a single GoogleError\n     *\n     * @private\n     *\n     * @param {GoogleErrorBody} err The original error.\n     * @param {GoogleInnerError[]} [errors] Inner errors, if any.\n     * @returns {string}\n     */\n    static createMultiErrorMessage(err, errors) {\n        const messages = new Set();\n        if (err.message) {\n            messages.add(err.message);\n        }\n        if (errors && errors.length) {\n            errors.forEach(({ message }) => messages.add(message));\n        }\n        else if (err.response && err.response.body) {\n            messages.add(ent.decode(err.response.body.toString()));\n        }\n        else if (!err.message) {\n            messages.add('A failure occurred during this request.');\n        }\n        let messageArr = Array.from(messages);\n        if (messageArr.length > 1) {\n            messageArr = messageArr.map((message, i) => `    ${i + 1}. ${message}`);\n            messageArr.unshift('Multiple errors occurred during the request. Please see the `errors` array for complete details.\\n');\n            messageArr.push('\\n');\n        }\n        return messageArr.join('\\n');\n    }\n}\nexports.ApiError = ApiError;\n/**\n * Custom error type for partial errors returned from the API.\n *\n * @param {object} b - Error object.\n */\nclass PartialFailureError extends Error {\n    constructor(b) {\n        super();\n        const errorObject = b;\n        this.errors = errorObject.errors;\n        this.name = 'PartialFailureError';\n        this.response = errorObject.response;\n        this.message = ApiError.createMultiErrorMessage(errorObject, this.errors);\n    }\n}\nexports.PartialFailureError = PartialFailureError;\nclass Util {\n    constructor() {\n        this.ApiError = ApiError;\n        this.PartialFailureError = PartialFailureError;\n    }\n    /**\n     * No op.\n     *\n     * @example\n     * function doSomething(callback) {\n     *   callback = callback || noop;\n     * }\n     */\n    noop() { }\n    /**\n     * Uniformly process an API response.\n     *\n     * @param {*} err - Error value.\n     * @param {*} resp - Response value.\n     * @param {*} body - Body value.\n     * @param {function} callback - The callback function.\n     */\n    handleResp(err, resp, body, callback) {\n        callback = callback || util.noop;\n        const parsedResp = extend(true, { err: err || null }, resp && util.parseHttpRespMessage(resp), body && util.parseHttpRespBody(body));\n        // Assign the parsed body to resp.body, even if { json: false } was passed\n        // as a request option.\n        // We assume that nobody uses the previously unparsed value of resp.body.\n        if (!parsedResp.err && resp && typeof parsedResp.body === 'object') {\n            parsedResp.resp.body = parsedResp.body;\n        }\n        if (parsedResp.err && resp) {\n            parsedResp.err.response = resp;\n        }\n        callback(parsedResp.err, parsedResp.body, parsedResp.resp);\n    }\n    /**\n     * Sniff an incoming HTTP response message for errors.\n     *\n     * @param {object} httpRespMessage - An incoming HTTP response message from `request`.\n     * @return {object} parsedHttpRespMessage - The parsed response.\n     * @param {?error} parsedHttpRespMessage.err - An error detected.\n     * @param {object} parsedHttpRespMessage.resp - The original response object.\n     */\n    parseHttpRespMessage(httpRespMessage) {\n        const parsedHttpRespMessage = {\n            resp: httpRespMessage,\n        };\n        if (httpRespMessage.statusCode < 200 || httpRespMessage.statusCode > 299) {\n            // Unknown error. Format according to ApiError standard.\n            parsedHttpRespMessage.err = new ApiError({\n                errors: new Array(),\n                code: httpRespMessage.statusCode,\n                message: httpRespMessage.statusMessage,\n                response: httpRespMessage,\n            });\n        }\n        return parsedHttpRespMessage;\n    }\n    /**\n     * Parse the response body from an HTTP request.\n     *\n     * @param {object} body - The response body.\n     * @return {object} parsedHttpRespMessage - The parsed response.\n     * @param {?error} parsedHttpRespMessage.err - An error detected.\n     * @param {object} parsedHttpRespMessage.body - The original body value provided\n     *     will try to be JSON.parse'd. If it's successful, the parsed value will\n     * be returned here, otherwise the original value and an error will be returned.\n     */\n    parseHttpRespBody(body) {\n        const parsedHttpRespBody = {\n            body,\n        };\n        if (typeof body === 'string') {\n            try {\n                parsedHttpRespBody.body = JSON.parse(body);\n            }\n            catch (err) {\n                parsedHttpRespBody.body = body;\n            }\n        }\n        if (parsedHttpRespBody.body && parsedHttpRespBody.body.error) {\n            // Error from JSON API.\n            parsedHttpRespBody.err = new ApiError(parsedHttpRespBody.body.error);\n        }\n        return parsedHttpRespBody;\n    }\n    /**\n     * Take a Duplexify stream, fetch an authenticated connection header, and\n     * create an outgoing writable stream.\n     *\n     * @param {Duplexify} dup - Duplexify stream.\n     * @param {object} options - Configuration object.\n     * @param {module:common/connection} options.connection - A connection instance used to get a token with and send the request through.\n     * @param {object} options.metadata - Metadata to send at the head of the request.\n     * @param {object} options.request - Request object, in the format of a standard Node.js http.request() object.\n     * @param {string=} options.request.method - Default: \"POST\".\n     * @param {string=} options.request.qs.uploadType - Default: \"multipart\".\n     * @param {string=} options.streamContentType - Default: \"application/octet-stream\".\n     * @param {function} onComplete - Callback, executed after the writable Request stream has completed.\n     */\n    makeWritableStream(dup, options, onComplete) {\n        onComplete = onComplete || util.noop;\n        const writeStream = new ProgressStream();\n        writeStream.on('progress', evt => dup.emit('progress', evt));\n        dup.setWritable(writeStream);\n        const defaultReqOpts = {\n            method: 'POST',\n            qs: {\n                uploadType: 'multipart',\n            },\n            timeout: 0,\n            maxRetries: 0,\n        };\n        const metadata = options.metadata || {};\n        const reqOpts = extend(true, defaultReqOpts, options.request, {\n            multipart: [\n                {\n                    'Content-Type': 'application/json',\n                    body: JSON.stringify(metadata),\n                },\n                {\n                    'Content-Type': metadata.contentType || 'application/octet-stream',\n                    body: writeStream,\n                },\n            ],\n        });\n        options.makeAuthenticatedRequest(reqOpts, {\n            onAuthenticated(err, authenticatedReqOpts) {\n                if (err) {\n                    dup.destroy(err);\n                    return;\n                }\n                const request = teeny_request_1.teenyRequest.defaults(requestDefaults);\n                request(authenticatedReqOpts, (err, resp, body) => {\n                    util.handleResp(err, resp, body, (err, data) => {\n                        if (err) {\n                            dup.destroy(err);\n                            return;\n                        }\n                        dup.emit('response', resp);\n                        onComplete(data);\n                    });\n                });\n            },\n        });\n    }\n    /**\n     * Returns true if the API request should be retried, given the error that was\n     * given the first time the request was attempted. This is used for rate limit\n     * related errors as well as intermittent server errors.\n     *\n     * @param {error} err - The API error to check if it is appropriate to retry.\n     * @return {boolean} True if the API request should be retried, false otherwise.\n     */\n    shouldRetryRequest(err) {\n        if (err) {\n            if ([408, 429, 500, 502, 503].indexOf(err.code) !== -1) {\n                return true;\n            }\n            if (err.errors) {\n                for (const e of err.errors) {\n                    const reason = e.reason;\n                    if (reason === 'rateLimitExceeded') {\n                        return true;\n                    }\n                    if (reason === 'userRateLimitExceeded') {\n                        return true;\n                    }\n                    if (reason && reason.includes('EAI_AGAIN')) {\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    }\n    /**\n     * Get a function for making authenticated requests.\n     *\n     * @param {object} config - Configuration object.\n     * @param {boolean=} config.autoRetry - Automatically retry requests if the\n     *     response is related to rate limits or certain intermittent server\n     * errors. We will exponentially backoff subsequent requests by default.\n     * (default: true)\n     * @param {object=} config.credentials - Credentials object.\n     * @param {boolean=} config.customEndpoint - If true, just return the provided request options. Default: false.\n     * @param {string=} config.email - Account email address, required for PEM/P12 usage.\n     * @param {number=} config.maxRetries - Maximum number of automatic retries attempted before returning the error. (default: 3)\n     * @param {string=} config.keyFile - Path to a .json, .pem, or .p12 keyfile.\n     * @param {array} config.scopes - Array of scopes required for the API.\n     */\n    makeAuthenticatedRequestFactory(config) {\n        const googleAutoAuthConfig = extend({}, config);\n        if (googleAutoAuthConfig.projectId === '{{projectId}}') {\n            delete googleAutoAuthConfig.projectId;\n        }\n        const authClient = googleAutoAuthConfig.authClient || new google_auth_library_1.GoogleAuth(googleAutoAuthConfig);\n        function makeAuthenticatedRequest(reqOpts, optionsOrCallback) {\n            let stream;\n            const reqConfig = extend({}, config);\n            let activeRequest_;\n            if (!optionsOrCallback) {\n                stream = duplexify();\n                reqConfig.stream = stream;\n            }\n            const options = typeof optionsOrCallback === 'object' ? optionsOrCallback : undefined;\n            const callback = typeof optionsOrCallback === 'function' ? optionsOrCallback : undefined;\n            const onAuthenticated = (err, authenticatedReqOpts) => {\n                const authLibraryError = err;\n                const autoAuthFailed = err &&\n                    err.message.indexOf('Could not load the default credentials') > -1;\n                if (autoAuthFailed) {\n                    // Even though authentication failed, the API might not actually\n                    // care.\n                    authenticatedReqOpts = reqOpts;\n                }\n                if (!err || autoAuthFailed) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    let projectId = authClient._cachedProjectId;\n                    if (config.projectId && config.projectId !== '{{projectId}}') {\n                        projectId = config.projectId;\n                    }\n                    try {\n                        authenticatedReqOpts = util.decorateRequest(authenticatedReqOpts, projectId);\n                        err = null;\n                    }\n                    catch (e) {\n                        // A projectId was required, but we don't have one.\n                        // Re-use the \"Could not load the default credentials error\" if\n                        // auto auth failed.\n                        err = err || e;\n                    }\n                }\n                if (err) {\n                    if (stream) {\n                        stream.destroy(err);\n                    }\n                    else {\n                        const fn = options && options.onAuthenticated\n                            ? options.onAuthenticated\n                            : callback;\n                        fn(err);\n                    }\n                    return;\n                }\n                if (options && options.onAuthenticated) {\n                    options.onAuthenticated(null, authenticatedReqOpts);\n                }\n                else {\n                    activeRequest_ = util.makeRequest(authenticatedReqOpts, reqConfig, (apiResponseError, ...params) => {\n                        if (apiResponseError &&\n                            apiResponseError.code === 401 &&\n                            authLibraryError) {\n                            // Re-use the \"Could not load the default credentials error\" if\n                            // the API request failed due to missing credentials.\n                            apiResponseError = authLibraryError;\n                        }\n                        callback(apiResponseError, ...params);\n                    });\n                }\n            };\n            if (reqConfig.customEndpoint) {\n                // Using a custom API override. Do not use `google-auth-library` for\n                // authentication. (ex: connecting to a local Datastore server)\n                onAuthenticated(null, reqOpts);\n            }\n            else {\n                authClient.authorizeRequest(reqOpts).then(res => {\n                    const opts = extend(true, {}, reqOpts, res);\n                    onAuthenticated(null, opts);\n                }, err => {\n                    onAuthenticated(err);\n                });\n            }\n            if (stream) {\n                return stream;\n            }\n            return {\n                abort() {\n                    setImmediate(() => {\n                        if (activeRequest_) {\n                            activeRequest_.abort();\n                            activeRequest_ = null;\n                        }\n                    });\n                },\n            };\n        }\n        const mar = makeAuthenticatedRequest;\n        mar.getCredentials = authClient.getCredentials.bind(authClient);\n        mar.authClient = authClient;\n        return mar;\n    }\n    /**\n     * Make a request through the `retryRequest` module with built-in error\n     * handling and exponential back off.\n     *\n     * @param {object} reqOpts - Request options in the format `request` expects.\n     * @param {object=} config - Configuration object.\n     * @param {boolean=} config.autoRetry - Automatically retry requests if the\n     *     response is related to rate limits or certain intermittent server\n     * errors. We will exponentially backoff subsequent requests by default.\n     * (default: true)\n     * @param {number=} config.maxRetries - Maximum number of automatic retries\n     *     attempted before returning the error. (default: 3)\n     * @param {object=} config.request - HTTP module for request calls.\n     * @param {function} callback - The callback function.\n     */\n    makeRequest(reqOpts, config, callback) {\n        const options = {\n            request: teeny_request_1.teenyRequest.defaults(requestDefaults),\n            retries: config.autoRetry !== false ? config.maxRetries || 3 : 0,\n            shouldRetryFn(httpRespMessage) {\n                const err = util.parseHttpRespMessage(httpRespMessage).err;\n                return err && util.shouldRetryRequest(err);\n            },\n        };\n        if (typeof reqOpts.maxRetries === 'number') {\n            options.retries = reqOpts.maxRetries;\n        }\n        if (!config.stream) {\n            return retryRequest(reqOpts, options, (err, response, body) => {\n                util.handleResp(err, response, body, callback);\n            });\n        }\n        const dup = config.stream;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let requestStream;\n        const isGetRequest = (reqOpts.method || 'GET').toUpperCase() === 'GET';\n        if (isGetRequest) {\n            requestStream = retryRequest(reqOpts, options);\n            dup.setReadable(requestStream);\n        }\n        else {\n            // Streaming writable HTTP requests cannot be retried.\n            requestStream = options.request(reqOpts);\n            dup.setWritable(requestStream);\n        }\n        // Replay the Request events back to the stream.\n        requestStream\n            .on('error', dup.destroy.bind(dup))\n            .on('response', dup.emit.bind(dup, 'response'))\n            .on('complete', dup.emit.bind(dup, 'complete'));\n        dup.abort = requestStream.abort;\n        return dup;\n    }\n    /**\n     * Decorate the options about to be made in a request.\n     *\n     * @param {object} reqOpts - The options to be passed to `request`.\n     * @param {string} projectId - The project ID.\n     * @return {object} reqOpts - The decorated reqOpts.\n     */\n    decorateRequest(reqOpts, projectId) {\n        delete reqOpts.autoPaginate;\n        delete reqOpts.autoPaginateVal;\n        delete reqOpts.objectMode;\n        if (reqOpts.qs !== null && typeof reqOpts.qs === 'object') {\n            delete reqOpts.qs.autoPaginate;\n            delete reqOpts.qs.autoPaginateVal;\n            reqOpts.qs = projectify_1.replaceProjectIdToken(reqOpts.qs, projectId);\n        }\n        if (Array.isArray(reqOpts.multipart)) {\n            reqOpts.multipart = reqOpts.multipart.map(part => {\n                return projectify_1.replaceProjectIdToken(part, projectId);\n            });\n        }\n        if (reqOpts.json !== null && typeof reqOpts.json === 'object') {\n            delete reqOpts.json.autoPaginate;\n            delete reqOpts.json.autoPaginateVal;\n            reqOpts.json = projectify_1.replaceProjectIdToken(reqOpts.json, projectId);\n        }\n        reqOpts.uri = projectify_1.replaceProjectIdToken(reqOpts.uri, projectId);\n        return reqOpts;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    isCustomType(unknown, module) {\n        function getConstructorName(obj) {\n            return obj.constructor && obj.constructor.name.toLowerCase();\n        }\n        const moduleNameParts = module.split('/');\n        const parentModuleName = moduleNameParts[0] && moduleNameParts[0].toLowerCase();\n        const subModuleName = moduleNameParts[1] && moduleNameParts[1].toLowerCase();\n        if (subModuleName && getConstructorName(unknown) !== subModuleName) {\n            return false;\n        }\n        let walkingModule = unknown;\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n            if (getConstructorName(walkingModule) === parentModuleName) {\n                return true;\n            }\n            walkingModule = walkingModule.parent;\n            if (!walkingModule) {\n                return false;\n            }\n        }\n    }\n    /**\n     * Create a properly-formatted User-Agent string from a package.json file.\n     *\n     * @param {object} packageJson - A module's package.json file.\n     * @return {string} userAgent - The formatted User-Agent string.\n     */\n    getUserAgentFromPackageJson(packageJson) {\n        const hyphenatedPackageName = packageJson.name\n            .replace('@google-cloud', 'gcloud-node') // For legacy purposes.\n            .replace('/', '-'); // For UA spec-compliance purposes.\n        return hyphenatedPackageName + '/' + packageJson.version;\n    }\n    /**\n     * Given two parameters, figure out if this is either:\n     *  - Just a callback function\n     *  - An options object, and then a callback function\n     * @param optionsOrCallback An options object or callback.\n     * @param cb A potentially undefined callback.\n     */\n    maybeOptionsOrCallback(optionsOrCallback, cb) {\n        return typeof optionsOrCallback === 'function'\n            ? [{}, optionsOrCallback]\n            : [optionsOrCallback, cb];\n    }\n}\nexports.Util = Util;\n/**\n * Basic Passthrough Stream that records the number of bytes read\n * every time the cursor is moved.\n */\nclass ProgressStream extends stream_1.Transform {\n    constructor() {\n        super(...arguments);\n        this.bytesRead = 0;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    _transform(chunk, encoding, callback) {\n        this.bytesRead += chunk.length;\n        this.emit('progress', { bytesWritten: this.bytesRead, contentLength: '*' });\n        this.push(chunk);\n        callback();\n    }\n}\nconst util = new Util();\nexports.util = util;\n//# sourceMappingURL=util.js.map"]},"metadata":{},"sourceType":"script"}