{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar _createForOfIteratorHelper = require(\"C:/Users/Zack/Desktop/rms-home/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"C:/Users/Zack/Desktop/rms-home/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/Users/Zack/Desktop/rms-home/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ResourceCollector = void 0;\n/**\n * ResourceCollector class implements asynchronous logic of calling the API call that supports pagination,\n * page by page, collecting all resources (up to `maxResults`) in the array.\n *\n * Usage:\n *   const resourceCollector = new ResourceCollector(apiCall, maxResults); // -1 for unlimited\n *   resourceCollector.processAllPages(request).then(resources => ...);\n */\n\nvar ResourceCollector = /*#__PURE__*/function () {\n  function ResourceCollector(apiCall) {\n    var maxResults = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;\n\n    _classCallCheck(this, ResourceCollector);\n\n    this.apiCall = apiCall;\n    this.resources = [];\n    this.maxResults = maxResults;\n  }\n\n  _createClass(ResourceCollector, [{\n    key: \"callback\",\n    value: function callback(err, resources, nextPageRequest) {\n      var _this = this;\n\n      if (err) {\n        // Something went wrong with this request - failing everything\n        this.rejectCallback(err);\n        return;\n      } // Process one page\n\n\n      var _iterator = _createForOfIteratorHelper(resources),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var resource = _step.value;\n          this.resources.push(resource);\n\n          if (this.resources.length === this.maxResults) {\n            nextPageRequest = null;\n            break;\n          }\n        } // All done?\n\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      if (!nextPageRequest) {\n        this.resolveCallback(this.resources);\n        return;\n      } // Schedule the next call\n\n\n      var callback = function callback() {\n        return _this.callback.apply(_this, arguments);\n      };\n\n      setImmediate(this.apiCall, nextPageRequest, callback);\n    }\n  }, {\n    key: \"processAllPages\",\n    value: function processAllPages(firstRequest) {\n      var _this2 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this2.resolveCallback = resolve;\n        _this2.rejectCallback = reject; // Schedule the first call\n\n        var callback = function callback() {\n          return _this2.callback.apply(_this2, arguments);\n        };\n\n        setImmediate(_this2.apiCall, firstRequest, callback);\n      });\n    }\n  }]);\n\n  return ResourceCollector;\n}();\n\nexports.ResourceCollector = ResourceCollector;","map":{"version":3,"sources":["../../../src/paginationCalls/resourceCollector.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;AAcG;;;;;;;;;;;;AAQH;;;;;;;AAOG;;IACU,iB;AAOX,6BAAY,OAAZ,EAA4D;AAAA,QAAf,UAAe,uEAAF,CAAC,CAAC;;AAAA;;AAC1D,SAAK,OAAL,GAAe,OAAf;AACA,SAAK,SAAL,GAAiB,EAAjB;AACA,SAAK,UAAL,GAAkB,UAAlB;AACD;;;;WAEO,kBACN,GADM,EAEN,SAFM,EAGN,eAHM,EAG8B;AAAA;;AAEpC,UAAI,GAAJ,EAAS;AACP;AACA,aAAK,cAAL,CAAqB,GAArB;AACA;AACD,OANmC,CAQpC;;;AARoC,iDASb,SATa;AAAA;;AAAA;AASpC,4DAAkC;AAAA,cAAvB,QAAuB;AAChC,eAAK,SAAL,CAAe,IAAf,CAAoB,QAApB;;AACA,cAAI,KAAK,SAAL,CAAe,MAAf,KAA0B,KAAK,UAAnC,EAA+C;AAC7C,YAAA,eAAe,GAAG,IAAlB;AACA;AACD;AACF,SAfmC,CAiBpC;;AAjBoC;AAAA;AAAA;AAAA;AAAA;;AAkBpC,UAAI,CAAC,eAAL,EAAsB;AACpB,aAAK,eAAL,CAAsB,KAAK,SAA3B;AACA;AACD,OArBmC,CAuBpC;;;AACA,UAAM,QAAQ,GAAG,SAAX,QAAW;AAAA,eAEZ,KAAI,CAAC,QAAL,OAAA,KAAI,YAFQ;AAAA,OAAjB;;AAGA,MAAA,YAAY,CAAC,KAAK,OAAN,EAAe,eAAf,EAAgC,QAAhC,CAAZ;AACD;;;WAED,yBAAgB,YAAhB,EAAyC;AAAA;;AACvC,aAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAoB;AACrC,QAAA,MAAI,CAAC,eAAL,GAAuB,OAAvB;AACA,QAAA,MAAI,CAAC,cAAL,GAAsB,MAAtB,CAFqC,CAIrC;;AACA,YAAM,QAAQ,GAAG,SAAX,QAAW;AAAA,iBAEZ,MAAI,CAAC,QAAL,OAAA,MAAI,YAFQ;AAAA,SAAjB;;AAGA,QAAA,YAAY,CAAC,MAAI,CAAC,OAAN,EAAe,YAAf,EAA6B,QAA7B,CAAZ;AACD,OATM,CAAP;AAUD;;;;;;AAzDH,OAAA,CAAA,iBAAA,GAAA,iBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\n/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ResourceCollector = void 0;\n/**\n * ResourceCollector class implements asynchronous logic of calling the API call that supports pagination,\n * page by page, collecting all resources (up to `maxResults`) in the array.\n *\n * Usage:\n *   const resourceCollector = new ResourceCollector(apiCall, maxResults); // -1 for unlimited\n *   resourceCollector.processAllPages(request).then(resources => ...);\n */\nclass ResourceCollector {\n    constructor(apiCall, maxResults = -1) {\n        this.apiCall = apiCall;\n        this.resources = [];\n        this.maxResults = maxResults;\n    }\n    callback(err, resources, nextPageRequest) {\n        if (err) {\n            // Something went wrong with this request - failing everything\n            this.rejectCallback(err);\n            return;\n        }\n        // Process one page\n        for (const resource of resources) {\n            this.resources.push(resource);\n            if (this.resources.length === this.maxResults) {\n                nextPageRequest = null;\n                break;\n            }\n        }\n        // All done?\n        if (!nextPageRequest) {\n            this.resolveCallback(this.resources);\n            return;\n        }\n        // Schedule the next call\n        const callback = (...args) => this.callback(...args);\n        setImmediate(this.apiCall, nextPageRequest, callback);\n    }\n    processAllPages(firstRequest) {\n        return new Promise((resolve, reject) => {\n            this.resolveCallback = resolve;\n            this.rejectCallback = reject;\n            // Schedule the first call\n            const callback = (...args) => this.callback(...args);\n            setImmediate(this.apiCall, firstRequest, callback);\n        });\n    }\n}\nexports.ResourceCollector = ResourceCollector;\n//# sourceMappingURL=resourceCollector.js.map"]},"metadata":{},"sourceType":"script"}