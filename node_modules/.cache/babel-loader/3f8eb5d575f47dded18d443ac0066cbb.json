{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/Zack/Desktop/rms-home/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"C:/Users/Zack/Desktop/rms-home/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _objectSpread = require(\"C:/Users/Zack/Desktop/rms-home/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar fs = require('fs');\n\nvar path = require('path');\n\nvar _require = require('util'),\n    promisify = _require.promisify;\n\nvar semver = require('semver');\n\nvar useNativeRecursiveOption = semver.satisfies(process.version, '>=10.12.0'); // https://github.com/nodejs/node/issues/8987\n// https://github.com/libuv/libuv/pull/1088\n\nvar checkPath = function checkPath(pth) {\n  if (process.platform === 'win32') {\n    var pathHasInvalidWinCharacters = /[<>:\"|?*]/.test(pth.replace(path.parse(pth).root, ''));\n\n    if (pathHasInvalidWinCharacters) {\n      var error = new Error(\"Path contains invalid characters: \".concat(pth));\n      error.code = 'EINVAL';\n      throw error;\n    }\n  }\n};\n\nvar processOptions = function processOptions(options) {\n  // https://github.com/sindresorhus/make-dir/issues/18\n  var defaults = {\n    mode: 511,\n    fs: fs\n  };\n  return _objectSpread(_objectSpread({}, defaults), options);\n};\n\nvar permissionError = function permissionError(pth) {\n  // This replicates the exception of `fs.mkdir` with native the\n  // `recusive` option when run on an invalid drive under Windows.\n  var error = new Error(\"operation not permitted, mkdir '\".concat(pth, \"'\"));\n  error.code = 'EPERM';\n  error.errno = -4048;\n  error.path = pth;\n  error.syscall = 'mkdir';\n  return error;\n};\n\nvar makeDir = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(input, options) {\n    var mkdir, stat, pth, make;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            checkPath(input);\n            options = processOptions(options);\n            mkdir = promisify(options.fs.mkdir);\n            stat = promisify(options.fs.stat);\n\n            if (!(useNativeRecursiveOption && options.fs.mkdir === fs.mkdir)) {\n              _context2.next = 9;\n              break;\n            }\n\n            pth = path.resolve(input);\n            _context2.next = 8;\n            return mkdir(pth, {\n              mode: options.mode,\n              recursive: true\n            });\n\n          case 8:\n            return _context2.abrupt(\"return\", pth);\n\n          case 9:\n            make = /*#__PURE__*/function () {\n              var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(pth) {\n                var stats;\n                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.prev = 0;\n                        _context.next = 3;\n                        return mkdir(pth, options.mode);\n\n                      case 3:\n                        return _context.abrupt(\"return\", pth);\n\n                      case 6:\n                        _context.prev = 6;\n                        _context.t0 = _context[\"catch\"](0);\n\n                        if (!(_context.t0.code === 'EPERM')) {\n                          _context.next = 10;\n                          break;\n                        }\n\n                        throw _context.t0;\n\n                      case 10:\n                        if (!(_context.t0.code === 'ENOENT')) {\n                          _context.next = 18;\n                          break;\n                        }\n\n                        if (!(path.dirname(pth) === pth)) {\n                          _context.next = 13;\n                          break;\n                        }\n\n                        throw permissionError(pth);\n\n                      case 13:\n                        if (!_context.t0.message.includes('null bytes')) {\n                          _context.next = 15;\n                          break;\n                        }\n\n                        throw _context.t0;\n\n                      case 15:\n                        _context.next = 17;\n                        return make(path.dirname(pth));\n\n                      case 17:\n                        return _context.abrupt(\"return\", make(pth));\n\n                      case 18:\n                        _context.prev = 18;\n                        _context.next = 21;\n                        return stat(pth);\n\n                      case 21:\n                        stats = _context.sent;\n\n                        if (stats.isDirectory()) {\n                          _context.next = 24;\n                          break;\n                        }\n\n                        throw new Error('The path is not a directory');\n\n                      case 24:\n                        _context.next = 29;\n                        break;\n\n                      case 26:\n                        _context.prev = 26;\n                        _context.t1 = _context[\"catch\"](18);\n                        throw _context.t0;\n\n                      case 29:\n                        return _context.abrupt(\"return\", pth);\n\n                      case 30:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee, null, [[0, 6], [18, 26]]);\n              }));\n\n              return function make(_x3) {\n                return _ref2.apply(this, arguments);\n              };\n            }();\n\n            return _context2.abrupt(\"return\", make(path.resolve(input)));\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function makeDir(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nmodule.exports = makeDir;\n\nmodule.exports.sync = function (input, options) {\n  checkPath(input);\n  options = processOptions(options);\n\n  if (useNativeRecursiveOption && options.fs.mkdirSync === fs.mkdirSync) {\n    var pth = path.resolve(input);\n    fs.mkdirSync(pth, {\n      mode: options.mode,\n      recursive: true\n    });\n    return pth;\n  }\n\n  var make = function make(pth) {\n    try {\n      options.fs.mkdirSync(pth, options.mode);\n    } catch (error) {\n      if (error.code === 'EPERM') {\n        throw error;\n      }\n\n      if (error.code === 'ENOENT') {\n        if (path.dirname(pth) === pth) {\n          throw permissionError(pth);\n        }\n\n        if (error.message.includes('null bytes')) {\n          throw error;\n        }\n\n        make(path.dirname(pth));\n        return make(pth);\n      }\n\n      try {\n        if (!options.fs.statSync(pth).isDirectory()) {\n          throw new Error('The path is not a directory');\n        }\n      } catch (_) {\n        throw error;\n      }\n    }\n\n    return pth;\n  };\n\n  return make(path.resolve(input));\n};","map":{"version":3,"sources":["C:/Users/Zack/Desktop/rms-home/node_modules/configstore/node_modules/make-dir/index.js"],"names":["fs","require","path","promisify","semver","useNativeRecursiveOption","satisfies","process","version","checkPath","pth","platform","pathHasInvalidWinCharacters","test","replace","parse","root","error","Error","code","processOptions","options","defaults","mode","permissionError","errno","syscall","makeDir","input","mkdir","stat","resolve","recursive","make","dirname","message","includes","stats","isDirectory","module","exports","sync","mkdirSync","statSync","_"],"mappings":"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","sourcesContent":["'use strict';\nconst fs = require('fs');\nconst path = require('path');\nconst {promisify} = require('util');\nconst semver = require('semver');\n\nconst useNativeRecursiveOption = semver.satisfies(process.version, '>=10.12.0');\n\n// https://github.com/nodejs/node/issues/8987\n// https://github.com/libuv/libuv/pull/1088\nconst checkPath = pth => {\n\tif (process.platform === 'win32') {\n\t\tconst pathHasInvalidWinCharacters = /[<>:\"|?*]/.test(pth.replace(path.parse(pth).root, ''));\n\n\t\tif (pathHasInvalidWinCharacters) {\n\t\t\tconst error = new Error(`Path contains invalid characters: ${pth}`);\n\t\t\terror.code = 'EINVAL';\n\t\t\tthrow error;\n\t\t}\n\t}\n};\n\nconst processOptions = options => {\n\t// https://github.com/sindresorhus/make-dir/issues/18\n\tconst defaults = {\n\t\tmode: 0o777,\n\t\tfs\n\t};\n\n\treturn {\n\t\t...defaults,\n\t\t...options\n\t};\n};\n\nconst permissionError = pth => {\n\t// This replicates the exception of `fs.mkdir` with native the\n\t// `recusive` option when run on an invalid drive under Windows.\n\tconst error = new Error(`operation not permitted, mkdir '${pth}'`);\n\terror.code = 'EPERM';\n\terror.errno = -4048;\n\terror.path = pth;\n\terror.syscall = 'mkdir';\n\treturn error;\n};\n\nconst makeDir = async (input, options) => {\n\tcheckPath(input);\n\toptions = processOptions(options);\n\n\tconst mkdir = promisify(options.fs.mkdir);\n\tconst stat = promisify(options.fs.stat);\n\n\tif (useNativeRecursiveOption && options.fs.mkdir === fs.mkdir) {\n\t\tconst pth = path.resolve(input);\n\n\t\tawait mkdir(pth, {\n\t\t\tmode: options.mode,\n\t\t\trecursive: true\n\t\t});\n\n\t\treturn pth;\n\t}\n\n\tconst make = async pth => {\n\t\ttry {\n\t\t\tawait mkdir(pth, options.mode);\n\n\t\t\treturn pth;\n\t\t} catch (error) {\n\t\t\tif (error.code === 'EPERM') {\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\tif (error.code === 'ENOENT') {\n\t\t\t\tif (path.dirname(pth) === pth) {\n\t\t\t\t\tthrow permissionError(pth);\n\t\t\t\t}\n\n\t\t\t\tif (error.message.includes('null bytes')) {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\n\t\t\t\tawait make(path.dirname(pth));\n\n\t\t\t\treturn make(pth);\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tconst stats = await stat(pth);\n\t\t\t\tif (!stats.isDirectory()) {\n\t\t\t\t\tthrow new Error('The path is not a directory');\n\t\t\t\t}\n\t\t\t} catch (_) {\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\treturn pth;\n\t\t}\n\t};\n\n\treturn make(path.resolve(input));\n};\n\nmodule.exports = makeDir;\n\nmodule.exports.sync = (input, options) => {\n\tcheckPath(input);\n\toptions = processOptions(options);\n\n\tif (useNativeRecursiveOption && options.fs.mkdirSync === fs.mkdirSync) {\n\t\tconst pth = path.resolve(input);\n\n\t\tfs.mkdirSync(pth, {\n\t\t\tmode: options.mode,\n\t\t\trecursive: true\n\t\t});\n\n\t\treturn pth;\n\t}\n\n\tconst make = pth => {\n\t\ttry {\n\t\t\toptions.fs.mkdirSync(pth, options.mode);\n\t\t} catch (error) {\n\t\t\tif (error.code === 'EPERM') {\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\tif (error.code === 'ENOENT') {\n\t\t\t\tif (path.dirname(pth) === pth) {\n\t\t\t\t\tthrow permissionError(pth);\n\t\t\t\t}\n\n\t\t\t\tif (error.message.includes('null bytes')) {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\n\t\t\t\tmake(path.dirname(pth));\n\t\t\t\treturn make(pth);\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!options.fs.statSync(pth).isDirectory()) {\n\t\t\t\t\tthrow new Error('The path is not a directory');\n\t\t\t\t}\n\t\t\t} catch (_) {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\n\t\treturn pth;\n\t};\n\n\treturn make(path.resolve(input));\n};\n"]},"metadata":{},"sourceType":"script"}