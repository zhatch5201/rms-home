{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:/Users/Zack/Desktop/rms-home/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _inherits = require(\"C:/Users/Zack/Desktop/rms-home/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"C:/Users/Zack/Desktop/rms-home/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _wrapNativeSuper = require(\"C:/Users/Zack/Desktop/rms-home/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapNativeSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar stream_1 = require(\"stream\"); // Copyright 2014 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Populate the `{{projectId}}` placeholder.\n *\n * @throws {Error} If a projectId is required, but one is not provided.\n *\n * @param {*} - Any input value that may contain a placeholder. Arrays and objects will be looped.\n * @param {string} projectId - A projectId. If not provided\n * @return {*} - The original argument with all placeholders populated.\n */\n// eslint-disable-next-line  @typescript-eslint/no-explicit-any\n\n\nfunction replaceProjectIdToken(value, projectId) {\n  if (Array.isArray(value)) {\n    value = value.map(function (v) {\n      return replaceProjectIdToken(v, projectId);\n    });\n  }\n\n  if (value !== null && typeof value === 'object' && !(value instanceof Buffer) && !(value instanceof stream_1.Stream) && typeof value.hasOwnProperty === 'function') {\n    for (var opt in value) {\n      // eslint-disable-next-line no-prototype-builtins\n      if (value.hasOwnProperty(opt)) {\n        value[opt] = replaceProjectIdToken(value[opt], projectId);\n      }\n    }\n  }\n\n  if (typeof value === 'string' && value.indexOf('{{projectId}}') > -1) {\n    if (!projectId || projectId === '{{projectId}}') {\n      throw new MissingProjectIdError();\n    }\n\n    value = value.replace(/{{projectId}}/g, projectId);\n  }\n\n  return value;\n}\n\nexports.replaceProjectIdToken = replaceProjectIdToken;\n/**\n * Custom error type for missing project ID errors.\n */\n\nvar MissingProjectIdError = /*#__PURE__*/function (_Error) {\n  _inherits(MissingProjectIdError, _Error);\n\n  var _super = _createSuper(MissingProjectIdError);\n\n  function MissingProjectIdError() {\n    var _this;\n\n    _classCallCheck(this, MissingProjectIdError);\n\n    _this = _super.apply(this, arguments);\n    _this.message = \"Sorry, we cannot connect to Cloud Services without a project\\n    ID. You may specify one with an environment variable named\\n    \\\"GOOGLE_CLOUD_PROJECT\\\".\".replace(/ +/g, ' ');\n    return _this;\n  }\n\n  return MissingProjectIdError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nexports.MissingProjectIdError = MissingProjectIdError;","map":{"version":3,"sources":["C:/Users/Zack/Desktop/rms-home/node_modules/@google-cloud/projectify/build/src/index.js"],"names":["Object","defineProperty","exports","value","stream_1","require","replaceProjectIdToken","projectId","Array","isArray","map","v","Buffer","Stream","hasOwnProperty","opt","indexOf","MissingProjectIdError","replace","arguments","message","Error"],"mappings":"AAAA;;;;;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAMC,QAAQ,GAAGC,OAAO,CAAC,QAAD,CAAxB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,qBAAT,CAA+BH,KAA/B,EAAsCI,SAAtC,EAAiD;AAC7C,MAAIC,KAAK,CAACC,OAAN,CAAcN,KAAd,CAAJ,EAA0B;AACtBA,IAAAA,KAAK,GAAGA,KAAK,CAACO,GAAN,CAAU,UAAAC,CAAC;AAAA,aAAIL,qBAAqB,CAACK,CAAD,EAAIJ,SAAJ,CAAzB;AAAA,KAAX,CAAR;AACH;;AACD,MAAIJ,KAAK,KAAK,IAAV,IACA,OAAOA,KAAP,KAAiB,QADjB,IAEA,EAAEA,KAAK,YAAYS,MAAnB,CAFA,IAGA,EAAET,KAAK,YAAYC,QAAQ,CAACS,MAA5B,CAHA,IAIA,OAAOV,KAAK,CAACW,cAAb,KAAgC,UAJpC,EAIgD;AAC5C,SAAK,IAAMC,GAAX,IAAkBZ,KAAlB,EAAyB;AACrB;AACA,UAAIA,KAAK,CAACW,cAAN,CAAqBC,GAArB,CAAJ,EAA+B;AAC3BZ,QAAAA,KAAK,CAACY,GAAD,CAAL,GAAaT,qBAAqB,CAACH,KAAK,CAACY,GAAD,CAAN,EAAaR,SAAb,CAAlC;AACH;AACJ;AACJ;;AACD,MAAI,OAAOJ,KAAP,KAAiB,QAAjB,IACAA,KAAK,CAACa,OAAN,CAAc,eAAd,IAAiC,CAAC,CADtC,EACyC;AACrC,QAAI,CAACT,SAAD,IAAcA,SAAS,KAAK,eAAhC,EAAiD;AAC7C,YAAM,IAAIU,qBAAJ,EAAN;AACH;;AACDd,IAAAA,KAAK,GAAGA,KAAK,CAACe,OAAN,CAAc,gBAAd,EAAgCX,SAAhC,CAAR;AACH;;AACD,SAAOJ,KAAP;AACH;;AACDD,OAAO,CAACI,qBAAR,GAAgCA,qBAAhC;AACA;AACA;AACA;;IACMW,qB;;;;;AACF,mCAAc;AAAA;;AAAA;;AACV,+BAASE,SAAT;AACA,UAAKC,OAAL,GAAe,8JAEMF,OAFN,CAEc,KAFd,EAEqB,GAFrB,CAAf;AAFU;AAKb;;;iCAN+BG,K;;AAQpCnB,OAAO,CAACe,qBAAR,GAAgCA,qBAAhC","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst stream_1 = require(\"stream\");\n// Copyright 2014 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Populate the `{{projectId}}` placeholder.\n *\n * @throws {Error} If a projectId is required, but one is not provided.\n *\n * @param {*} - Any input value that may contain a placeholder. Arrays and objects will be looped.\n * @param {string} projectId - A projectId. If not provided\n * @return {*} - The original argument with all placeholders populated.\n */\n// eslint-disable-next-line  @typescript-eslint/no-explicit-any\nfunction replaceProjectIdToken(value, projectId) {\n    if (Array.isArray(value)) {\n        value = value.map(v => replaceProjectIdToken(v, projectId));\n    }\n    if (value !== null &&\n        typeof value === 'object' &&\n        !(value instanceof Buffer) &&\n        !(value instanceof stream_1.Stream) &&\n        typeof value.hasOwnProperty === 'function') {\n        for (const opt in value) {\n            // eslint-disable-next-line no-prototype-builtins\n            if (value.hasOwnProperty(opt)) {\n                value[opt] = replaceProjectIdToken(value[opt], projectId);\n            }\n        }\n    }\n    if (typeof value === 'string' &&\n        value.indexOf('{{projectId}}') > -1) {\n        if (!projectId || projectId === '{{projectId}}') {\n            throw new MissingProjectIdError();\n        }\n        value = value.replace(/{{projectId}}/g, projectId);\n    }\n    return value;\n}\nexports.replaceProjectIdToken = replaceProjectIdToken;\n/**\n * Custom error type for missing project ID errors.\n */\nclass MissingProjectIdError extends Error {\n    constructor() {\n        super(...arguments);\n        this.message = `Sorry, we cannot connect to Cloud Services without a project\n    ID. You may specify one with an environment variable named\n    \"GOOGLE_CLOUD_PROJECT\".`.replace(/ +/g, ' ');\n    }\n}\nexports.MissingProjectIdError = MissingProjectIdError;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}