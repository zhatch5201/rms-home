{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zack\\\\Desktop\\\\rms-home\\\\src\\\\Components\\\\person_card.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport firebase from 'firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PersonCard() {\n  _s();\n\n  const [people, setPeople] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const ref = firebase.firestore().collection(\"People\");\n\n  function getPeople() {\n    setLoading(true);\n    ref.onSnapshot(querySnapshot => {\n      const items = [];\n      querySnapshot.forEach(person => {\n        var timer = setTimeout(() => {\n          console.log(`test`);\n        }, 50);\n        items.push(person.data());\n        clearTimeout(timer);\n      });\n      setPeople(items);\n      setLoading(false); // console.log(people);\n    });\n  }\n\n  useEffect(() => {\n    getPeople();\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }, this);\n  }\n\n  const cardStyles = makeStyles({\n    root: {\n      minWidth: 275,\n      maxWidth: 275,\n      borderRadius: 10,\n      background: '#69647b',\n      color: '#c7bfac'\n    },\n    title: {\n      fontSize: 14\n    },\n    pos: {\n      marginBottom: 12\n    }\n  });\n  const accordionStyle = makeStyles(theme => ({\n    root: {\n      width: '90%',\n      margin: '5px auto',\n      background: '#374055',\n      color: '#cdcea9'\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n      fontWeight: theme.typography.fontWeightRegular\n    },\n    ul: {\n      width: '100%'\n    },\n    table: {\n      width: '100%'\n    },\n    th: {\n      textAlign: 'left'\n    },\n    td: {\n      textAlign: 'center'\n    }\n  }));\n  const cardClasses = cardStyles();\n  const accordionClasses = accordionStyle();\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: cardClasses.root,\n      variant: \"outlined\",\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: cardClasses.title,\n          color: \"textSecondary\",\n          gutterBottom: true,\n          children: \"Word of the Day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"h2\",\n          children: /*#__PURE__*/_jsxDEV(Accordion, {\n            className: accordionClasses.root,\n            children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n              expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 37\n              }, this),\n              \"aria-controls\": \"panel1a-content\",\n              id: \"panel1a-header\",\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                className: accordionClasses.heading,\n                children: \"Demographic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                className: accordionClasses.ul,\n                children: /*#__PURE__*/_jsxDEV(\"table\", {\n                  className: accordionClasses.table,\n                  children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                        className: accordionClasses.th,\n                        children: \"Gender\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 109,\n                        columnNumber: 37\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        className: accordionClasses.td\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 110,\n                        columnNumber: 37\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 108,\n                      columnNumber: 34\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 31\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 28\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 22\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: cardClasses.pos,\n          color: \"textSecondary\",\n          children: \"adjective\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          component: \"p\",\n          children: [\"well meaning and kindly.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 16\n          }, this), '\"a benevolent smile\"']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          children: \"Learn More\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 7\n  }, this);\n}\n\n_s(PersonCard, \"b3BFqtNlv/+8lPVmieNQw64yYCM=\");\n\n_c = PersonCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PersonCard\");","map":{"version":3,"sources":["C:/Users/Zack/Desktop/rms-home/src/Components/person_card.js"],"names":["React","Fragment","useState","useEffect","makeStyles","Card","CardActions","CardContent","Button","Typography","Accordion","AccordionSummary","AccordionDetails","ExpandMoreIcon","firebase","PersonCard","people","setPeople","loading","setLoading","ref","firestore","collection","getPeople","onSnapshot","querySnapshot","items","forEach","person","timer","setTimeout","console","log","push","data","clearTimeout","cardStyles","root","minWidth","maxWidth","borderRadius","background","color","title","fontSize","pos","marginBottom","accordionStyle","theme","width","margin","heading","typography","pxToRem","fontWeight","fontWeightRegular","ul","table","th","textAlign","td","cardClasses","accordionClasses"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport firebase from 'firebase';\r\n\r\n\r\n\r\nexport default function PersonCard() {\r\n   const [people, setPeople] = useState([]);\r\n   const [loading, setLoading] = useState(true);\r\n   const ref = firebase.firestore().collection(\"People\");\r\n\r\n   function getPeople() {\r\n      setLoading(true);\r\n      ref.onSnapshot((querySnapshot) => {\r\n         const items = [];\r\n         querySnapshot.forEach((person) => {\r\n            var timer = setTimeout(() => { console.log(`test`); }, 50);\r\n            items.push(person.data());\r\n            clearTimeout(timer);\r\n         });\r\n         setPeople(items);\r\n         setLoading(false);\r\n         // console.log(people);\r\n      });\r\n   }\r\n\r\n   useEffect(() => {\r\n      getPeople();\r\n   }, []);\r\n\r\n   if (loading) {\r\n      return (<h1>Loading...</h1>);\r\n   }\r\n   const cardStyles = makeStyles({\r\n      root: {\r\n         minWidth: 275,\r\n         maxWidth: 275,\r\n         borderRadius: 10,\r\n         background: '#69647b',\r\n         color: '#c7bfac'\r\n      },\r\n      title: {\r\n         fontSize: 14,\r\n      },\r\n      pos: {\r\n         marginBottom: 12,\r\n      },\r\n   });\r\n   const accordionStyle = makeStyles((theme) => ({\r\n      root: {\r\n         width: '90%',\r\n         margin: '5px auto',\r\n         background: '#374055',\r\n         color: '#cdcea9'\r\n      },\r\n      heading: {\r\n         fontSize: theme.typography.pxToRem(15),\r\n         fontWeight: theme.typography.fontWeightRegular,\r\n      },\r\n      ul: {\r\n         width: '100%'\r\n      },\r\n      table: {\r\n         width: '100%'\r\n      },\r\n      th: {\r\n         textAlign: 'left'\r\n      },\r\n      td: {\r\n         textAlign: 'center'\r\n      }\r\n   }));\r\n\r\n   const cardClasses = cardStyles();\r\n   const accordionClasses = accordionStyle();\r\n   return (\r\n      <Fragment>\r\n         <Card className={cardClasses.root} variant=\"outlined\">\r\n            <CardContent>\r\n               <Typography className={cardClasses.title} color=\"textSecondary\" gutterBottom>\r\n                  Word of the Day\r\n               </Typography>\r\n\r\n\r\n\r\n               <Typography variant=\"h5\" component=\"h2\">\r\n                  <Accordion className={accordionClasses.root}>\r\n                     <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1a-content\"\r\n                        id=\"panel1a-header\"\r\n                     >\r\n                        <Typography className={accordionClasses.heading}>Demographic</Typography>\r\n                     </AccordionSummary>\r\n                     <AccordionDetails>\r\n                        <Typography className={accordionClasses.ul}>\r\n                           <table className={accordionClasses.table}>\r\n                              <tbody>\r\n                                 <tr>\r\n                                    <th className={accordionClasses.th}>Gender</th>\r\n                                    <td className={accordionClasses.td}></td>\r\n                                 </tr>\r\n                              </tbody>\r\n                           </table>\r\n                        </Typography>\r\n                     </AccordionDetails>\r\n                  </Accordion>\r\n               </Typography>\r\n\r\n\r\n\r\n\r\n               <Typography className={cardClasses.pos} color=\"textSecondary\">\r\n                  adjective\r\n               </Typography>\r\n               <Typography variant=\"body2\" component=\"p\">\r\n                  well meaning and kindly.\r\n               <br />\r\n                  {'\"a benevolent smile\"'}\r\n               </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n               <Button size=\"small\">Learn More</Button>\r\n            </CardActions>\r\n         </Card>\r\n      </Fragment>\r\n   );\r\n}"]},"metadata":{},"sourceType":"module"}