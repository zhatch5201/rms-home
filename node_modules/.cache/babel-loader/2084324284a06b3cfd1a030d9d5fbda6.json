{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zack\\\\Desktop\\\\rms-home\\\\src\\\\Components\\\\people_grid.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { useState, useEffect, Fragment } from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport firebase from \"./firebase\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PeopleGrid() {\n  _s();\n\n  const [people, setPeople] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const ref = firebase.firestore().collection(\"People\");\n\n  function getPeople() {\n    setLoading(true);\n    ref.onSnapshot(querySnapshot => {\n      const items = [];\n      querySnapshot.forEach(person => {\n        items.push(person.data());\n      });\n      setPeople(items);\n      setLoading(false); // console.log(people);\n    });\n  }\n\n  useEffect(() => {\n    getPeople();\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(CircularProgress, {\n      color: \"secondary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }, this);\n  }\n\n  const columns = [{\n    field: 'first_name',\n    headerName: 'First name',\n    width: 130\n  }, {\n    field: 'last_name',\n    headerName: 'Last name',\n    width: 130\n  }, {\n    field: 'address',\n    flex: 1,\n    headerName: 'Address',\n    width: 150\n  }, // { field: }\n  {\n    field: 'fullName',\n    headerName: 'Full name',\n    sortable: true,\n    width: 160,\n    valueGetter: person_fields => {\n      return /*#__PURE__*/_jsxDEV(Link, {\n        to: \"\",\n        children: JSON.stringify(person_fields.getValue('first_name'))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 16\n      }, this);\n    }\n  }];\n  const rows = people; // console.log(people);\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '100vh',\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: rows,\n        columns: columns,\n        pageSize: 25,\n        checkboxSelection: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 7\n  }, this);\n}\n\n_s(PeopleGrid, \"b3BFqtNlv/+8lPVmieNQw64yYCM=\");\n\n_c = PeopleGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"PeopleGrid\");","map":{"version":3,"sources":["C:/Users/Zack/Desktop/rms-home/src/Components/people_grid.js"],"names":["React","useState","useEffect","Fragment","DataGrid","firebase","CircularProgress","Link","PeopleGrid","people","setPeople","loading","setLoading","ref","firestore","collection","getPeople","onSnapshot","querySnapshot","items","forEach","person","push","data","columns","field","headerName","width","flex","sortable","valueGetter","person_fields","JSON","stringify","getValue","rows","height"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,QAA9B,QAA8C,OAA9C;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AAClC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAMY,GAAG,GAAGR,QAAQ,CAACS,SAAT,GAAqBC,UAArB,CAAgC,QAAhC,CAAZ;;AAGA,WAASC,SAAT,GAAqB;AAClBJ,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAC,IAAAA,GAAG,CAACI,UAAJ,CAAgBC,aAAD,IAAmB;AAC/B,YAAMC,KAAK,GAAG,EAAd;AACAD,MAAAA,aAAa,CAACE,OAAd,CAAuBC,MAAD,IAAY;AAC/BF,QAAAA,KAAK,CAACG,IAAN,CAAWD,MAAM,CAACE,IAAP,EAAX;AACF,OAFD;AAGAb,MAAAA,SAAS,CAACS,KAAD,CAAT;AACAP,MAAAA,UAAU,CAAC,KAAD,CAAV,CAN+B,CAO/B;AACF,KARD;AASF;;AAEDV,EAAAA,SAAS,CAAC,MAAM;AACbc,IAAAA,SAAS;AACX,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAIL,OAAJ,EAAa;AACV,wBAAQ,QAAC,gBAAD;AAAkB,MAAA,KAAK,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,YAAR;AACF;;AAID,QAAMa,OAAO,GAAG,CACb;AAAEC,IAAAA,KAAK,EAAE,YAAT;AAAuBC,IAAAA,UAAU,EAAE,YAAnC;AAAiDC,IAAAA,KAAK,EAAE;AAAxD,GADa,EAEb;AAAEF,IAAAA,KAAK,EAAE,WAAT;AAAsBC,IAAAA,UAAU,EAAE,WAAlC;AAA+CC,IAAAA,KAAK,EAAE;AAAtD,GAFa,EAGb;AAAEF,IAAAA,KAAK,EAAE,SAAT;AAAoBG,IAAAA,IAAI,EAAE,CAA1B;AAA6BF,IAAAA,UAAU,EAAE,SAAzC;AAAoDC,IAAAA,KAAK,EAAE;AAA3D,GAHa,EAIb;AACA;AACGF,IAAAA,KAAK,EAAE,UADV;AACsBC,IAAAA,UAAU,EAAE,WADlC;AAC+CG,IAAAA,QAAQ,EAAE,IADzD;AAC+DF,IAAAA,KAAK,EAAE,GADtE;AAC2EG,IAAAA,WAAW,EAAGC,aAAD,IAAmB;AACrG,0BACG,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,EAAT;AAAA,kBAAaC,IAAI,CAACC,SAAL,CAAeF,aAAa,CAACG,QAAd,CAAuB,YAAvB,CAAf;AAAb;AAAA;AAAA;AAAA;AAAA,cADH;AAGF;AALJ,GALa,CAAhB;AAcA,QAAMC,IAAI,GAAG1B,MAAb,CA3CkC,CA4ClC;;AACA,sBACG,QAAC,QAAD;AAAA,2BACG;AAAK,MAAA,KAAK,EAAE;AAAE2B,QAAAA,MAAM,EAAE,OAAV;AAAmBT,QAAAA,KAAK,EAAE;AAA1B,OAAZ;AAAA,6BACG,QAAC,QAAD;AAAU,QAAA,IAAI,EAAEQ,IAAhB;AAAsB,QAAA,OAAO,EAAEX,OAA/B;AAAwC,QAAA,QAAQ,EAAE,EAAlD;AAAsD,QAAA,iBAAiB;AAAvE;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,UADH;AASF;;GAtDuBhB,U;;KAAAA,U","sourcesContent":["import * as React from 'react';\r\nimport { useState, useEffect, Fragment } from 'react';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport firebase from \"./firebase\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function PeopleGrid() {\r\n   const [people, setPeople] = useState([]);\r\n   const [loading, setLoading] = useState(true);\r\n   const ref = firebase.firestore().collection(\"People\");\r\n\r\n\r\n   function getPeople() {\r\n      setLoading(true);\r\n      ref.onSnapshot((querySnapshot) => {\r\n         const items = [];\r\n         querySnapshot.forEach((person) => {\r\n            items.push(person.data());\r\n         });\r\n         setPeople(items);\r\n         setLoading(false);\r\n         // console.log(people);\r\n      });\r\n   }\r\n\r\n   useEffect(() => {\r\n      getPeople();\r\n   }, []);\r\n\r\n   if (loading) {\r\n      return (<CircularProgress color=\"secondary\" />);\r\n   }\r\n\r\n\r\n\r\n   const columns = [\r\n      { field: 'first_name', headerName: 'First name', width: 130 },\r\n      { field: 'last_name', headerName: 'Last name', width: 130 },\r\n      { field: 'address', flex: 1, headerName: 'Address', width: 150 },\r\n      // { field: }\r\n      {\r\n         field: 'fullName', headerName: 'Full name', sortable: true, width: 160, valueGetter: (person_fields) => {\r\n            return (\r\n               <Link to=''>{JSON.stringify(person_fields.getValue('first_name'))}</Link>\r\n            );\r\n         }\r\n      },\r\n   ];\r\n\r\n   const rows = people;\r\n   // console.log(people);\r\n   return (\r\n      <Fragment>\r\n         <div style={{ height: '100vh', width: '100%' }}>\r\n            <DataGrid rows={rows} columns={columns} pageSize={25} checkboxSelection />\r\n         </div>\r\n      </Fragment>\r\n\r\n\r\n   );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}