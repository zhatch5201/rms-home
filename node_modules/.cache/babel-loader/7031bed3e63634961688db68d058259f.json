{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zack\\\\Desktop\\\\rms-home\\\\src\\\\firebase\\\\test.js\";\nimport * as React from 'react';\nimport { Fragment } from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport firebase from \"./firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PeopleGrid() {\n  const ref = firebase.firestore().collection(\"People\");\n  console.log(ref);\n  const columns = [{\n    field: 'id',\n    headerName: 'ID',\n    width: 70\n  }, {\n    field: 'firstName',\n    headerName: 'First name',\n    width: 130\n  }, {\n    field: 'lastName',\n    headerName: 'Last name',\n    width: 130\n  }, {\n    field: 'age',\n    headerName: 'Age',\n    type: 'number',\n    width: 90\n  }, {\n    field: 'fullName',\n    headerName: 'Full name',\n    description: 'This column has a value getter and is not sortable.',\n    sortable: false,\n    width: 160,\n    valueGetter: params => `${params.getValue('firstName') || ''} ${params.getValue('lastName') || ''}`\n  }];\n  const rows = [{\n    id: 1,\n    lastName: 'Snow',\n    firstName: 'Jon',\n    age: 35\n  }, {\n    id: 2,\n    lastName: 'Lannister',\n    firstName: 'Cersei',\n    age: 42\n  }, {\n    id: 3,\n    lastName: 'Lannister',\n    firstName: 'Jaime',\n    age: 45\n  }, {\n    id: 4,\n    lastName: 'Stark',\n    firstName: 'Arya',\n    age: 16\n  }, {\n    id: 5,\n    lastName: 'Targaryen',\n    firstName: 'Daenerys',\n    age: null\n  }, {\n    id: 6,\n    lastName: 'Melisandre',\n    firstName: null,\n    age: 150\n  }, {\n    id: 7,\n    lastName: 'Clifford',\n    firstName: 'Ferrara',\n    age: 44\n  }, {\n    id: 8,\n    lastName: 'Frances',\n    firstName: 'Rossini',\n    age: 36\n  }, {\n    id: 9,\n    lastName: 'Roxie',\n    firstName: 'Harvey',\n    age: 65\n  }, {\n    id: 1,\n    lastName: 'Snow',\n    firstName: 'Jon',\n    age: 35\n  }, {\n    id: 2,\n    lastName: 'Lannister',\n    firstName: 'Cersei',\n    age: 42\n  }, {\n    id: 3,\n    lastName: 'Lannister',\n    firstName: 'Jaime',\n    age: 45\n  }, {\n    id: 4,\n    lastName: 'Stark',\n    firstName: 'Arya',\n    age: 16\n  }, {\n    id: 5,\n    lastName: 'Targaryen',\n    firstName: 'Daenerys',\n    age: null\n  }, {\n    id: 6,\n    lastName: 'Melisandre',\n    firstName: null,\n    age: 150\n  }, {\n    id: 7,\n    lastName: 'Clifford',\n    firstName: 'Ferrara',\n    age: 44\n  }, {\n    id: 8,\n    lastName: 'Frances',\n    firstName: 'Rossini',\n    age: 36\n  }, {\n    id: 9,\n    lastName: 'Roxie',\n    firstName: 'Harvey',\n    age: 65\n  }];\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '100vh',\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: rows,\n        columns: columns,\n        pageSize: 25,\n        checkboxSelection: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 7\n  }, this);\n}\n_c = PeopleGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"PeopleGrid\");","map":{"version":3,"sources":["C:/Users/Zack/Desktop/rms-home/src/firebase/test.js"],"names":["React","Fragment","DataGrid","firebase","PeopleGrid","ref","firestore","collection","console","log","columns","field","headerName","width","type","description","sortable","valueGetter","params","getValue","rows","id","lastName","firstName","age","height"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { Fragment } from 'react';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport firebase from \"./firebase\";\r\n\r\n\r\nexport default function PeopleGrid() {\r\n\r\n   const ref = firebase.firestore().collection(\"People\");\r\n   console.log(ref);\r\n\r\n   const columns = [\r\n      { field: 'id', headerName: 'ID', width: 70 },\r\n      { field: 'firstName', headerName: 'First name', width: 130 },\r\n      { field: 'lastName', headerName: 'Last name', width: 130 },\r\n      {\r\n         field: 'age',\r\n         headerName: 'Age',\r\n         type: 'number',\r\n         width: 90,\r\n      },\r\n      {\r\n         field: 'fullName',\r\n         headerName: 'Full name',\r\n         description: 'This column has a value getter and is not sortable.',\r\n         sortable: false,\r\n         width: 160,\r\n         valueGetter: (params) =>\r\n            `${params.getValue('firstName') || ''} ${params.getValue('lastName') || ''}`,\r\n      },\r\n   ];\r\n\r\n   const rows = [\r\n      { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },\r\n      { id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },\r\n      { id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45 },\r\n      { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\r\n      { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\r\n      { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },\r\n      { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\r\n      { id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },\r\n      { id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\r\n      { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },\r\n      { id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },\r\n      { id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45 },\r\n      { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\r\n      { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\r\n      { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },\r\n      { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\r\n      { id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },\r\n      { id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\r\n   ];\r\n   return (\r\n      <Fragment>\r\n         <div style={{ height: '100vh', width: '100%' }}>\r\n            <DataGrid rows={rows} columns={columns} pageSize={25} checkboxSelection />\r\n         </div>\r\n      </Fragment>\r\n   );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}