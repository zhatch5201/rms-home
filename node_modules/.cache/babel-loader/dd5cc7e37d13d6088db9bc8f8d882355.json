{"ast":null,"code":"\"use strict\"; // Copyright 2019 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.unicodeJSONStringify = exports.objectKeyToLowercase = exports.qsStringify = exports.encodeURI = exports.fixedEncodeURIComponent = exports.objectEntries = exports.normalize = void 0;\n\nvar querystring = require(\"querystring\");\n\nfunction normalize(optionsOrCallback, cb) {\n  var options = typeof optionsOrCallback === 'object' ? optionsOrCallback : {};\n  var callback = typeof optionsOrCallback === 'function' ? optionsOrCallback : cb;\n  return {\n    options: options,\n    callback: callback\n  };\n}\n\nexports.normalize = normalize;\n/**\n * Flatten an object into an Array of arrays, [[key, value], ..].\n * Implements Object.entries() for Node.js <8\n * @internal\n */\n\nfunction objectEntries(obj) {\n  return Object.keys(obj).map(function (key) {\n    return [key, obj[key]];\n  });\n}\n\nexports.objectEntries = objectEntries;\n/**\n * Encode `str` with encodeURIComponent, plus these\n * reserved characters: `! * ' ( )`.\n *\n * @see [MDN: fixedEncodeURIComponent]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent}\n *\n * @param {string} str The URI component to encode.\n * @return {string} The encoded string.\n */\n\nfunction fixedEncodeURIComponent(str) {\n  return encodeURIComponent(str).replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase();\n  });\n}\n\nexports.fixedEncodeURIComponent = fixedEncodeURIComponent;\n/**\n * URI encode `uri` for generating signed URLs, using fixedEncodeURIComponent.\n *\n * Encode every byte except `A-Z a-Z 0-9 ~ - . _`.\n *\n * @param {string} uri The URI to encode.\n * @param [boolean=false] encodeSlash If `true`, the \"/\" character is not encoded.\n * @return {string} The encoded string.\n */\n\nfunction encodeURI(uri, encodeSlash) {\n  // Split the string by `/`, and conditionally rejoin them with either\n  // %2F if encodeSlash is `true`, or '/' if `false`.\n  return uri.split('/').map(fixedEncodeURIComponent).join(encodeSlash ? '%2F' : '/');\n}\n\nexports.encodeURI = encodeURI;\n/**\n * Serialize an object to a URL query string using util.encodeURI(uri, true).\n * @param {string} url The object to serialize.\n * @return {string} Serialized string.\n */\n\nfunction qsStringify(qs) {\n  return querystring.stringify(qs, '&', '=', {\n    encodeURIComponent: function encodeURIComponent(component) {\n      return encodeURI(component, true);\n    }\n  });\n}\n\nexports.qsStringify = qsStringify;\n\nfunction objectKeyToLowercase(object) {\n  var newObj = {};\n\n  for (var _i = 0, _Object$keys = Object.keys(object); _i < _Object$keys.length; _i++) {\n    var key = _Object$keys[_i];\n    var value = object[key];\n    key = key.toLowerCase();\n    newObj[key] = value;\n  }\n\n  return newObj;\n}\n\nexports.objectKeyToLowercase = objectKeyToLowercase;\n/**\n * JSON encode str, with unicode \\u+ representation.\n * @param {object} obj The object to encode.\n * @return {string} Serialized string.\n */\n\nfunction unicodeJSONStringify(obj) {\n  return JSON.stringify(obj).replace(/[\\u0080-\\uFFFF]/g, function (char) {\n    return \"\\\\u\" + ('0000' + char.charCodeAt(0).toString(16)).slice(-4);\n  });\n}\n\nexports.unicodeJSONStringify = unicodeJSONStringify;","map":{"version":3,"sources":["C:/Users/Zack/Desktop/rms-home/node_modules/@google-cloud/storage/build/src/util.js"],"names":["Object","defineProperty","exports","value","unicodeJSONStringify","objectKeyToLowercase","qsStringify","encodeURI","fixedEncodeURIComponent","objectEntries","normalize","querystring","require","optionsOrCallback","cb","options","callback","obj","keys","map","key","str","encodeURIComponent","replace","c","charCodeAt","toString","toUpperCase","uri","encodeSlash","split","join","qs","stringify","component","object","newObj","toLowerCase","JSON","char","slice"],"mappings":"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","sourcesContent":["\"use strict\";\n// Copyright 2019 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.unicodeJSONStringify = exports.objectKeyToLowercase = exports.qsStringify = exports.encodeURI = exports.fixedEncodeURIComponent = exports.objectEntries = exports.normalize = void 0;\nconst querystring = require(\"querystring\");\nfunction normalize(optionsOrCallback, cb) {\n    const options = (typeof optionsOrCallback === 'object'\n        ? optionsOrCallback\n        : {});\n    const callback = (typeof optionsOrCallback === 'function'\n        ? optionsOrCallback\n        : cb);\n    return { options, callback };\n}\nexports.normalize = normalize;\n/**\n * Flatten an object into an Array of arrays, [[key, value], ..].\n * Implements Object.entries() for Node.js <8\n * @internal\n */\nfunction objectEntries(obj) {\n    return Object.keys(obj).map(key => [key, obj[key]]);\n}\nexports.objectEntries = objectEntries;\n/**\n * Encode `str` with encodeURIComponent, plus these\n * reserved characters: `! * ' ( )`.\n *\n * @see [MDN: fixedEncodeURIComponent]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent}\n *\n * @param {string} str The URI component to encode.\n * @return {string} The encoded string.\n */\nfunction fixedEncodeURIComponent(str) {\n    return encodeURIComponent(str).replace(/[!'()*]/g, c => '%' + c.charCodeAt(0).toString(16).toUpperCase());\n}\nexports.fixedEncodeURIComponent = fixedEncodeURIComponent;\n/**\n * URI encode `uri` for generating signed URLs, using fixedEncodeURIComponent.\n *\n * Encode every byte except `A-Z a-Z 0-9 ~ - . _`.\n *\n * @param {string} uri The URI to encode.\n * @param [boolean=false] encodeSlash If `true`, the \"/\" character is not encoded.\n * @return {string} The encoded string.\n */\nfunction encodeURI(uri, encodeSlash) {\n    // Split the string by `/`, and conditionally rejoin them with either\n    // %2F if encodeSlash is `true`, or '/' if `false`.\n    return uri\n        .split('/')\n        .map(fixedEncodeURIComponent)\n        .join(encodeSlash ? '%2F' : '/');\n}\nexports.encodeURI = encodeURI;\n/**\n * Serialize an object to a URL query string using util.encodeURI(uri, true).\n * @param {string} url The object to serialize.\n * @return {string} Serialized string.\n */\nfunction qsStringify(qs) {\n    return querystring.stringify(qs, '&', '=', {\n        encodeURIComponent: (component) => encodeURI(component, true),\n    });\n}\nexports.qsStringify = qsStringify;\nfunction objectKeyToLowercase(object) {\n    const newObj = {};\n    for (let key of Object.keys(object)) {\n        const value = object[key];\n        key = key.toLowerCase();\n        newObj[key] = value;\n    }\n    return newObj;\n}\nexports.objectKeyToLowercase = objectKeyToLowercase;\n/**\n * JSON encode str, with unicode \\u+ representation.\n * @param {object} obj The object to encode.\n * @return {string} Serialized string.\n */\nfunction unicodeJSONStringify(obj) {\n    return JSON.stringify(obj).replace(/[\\u0080-\\uFFFF]/g, (char) => '\\\\u' + ('0000' + char.charCodeAt(0).toString(16)).slice(-4));\n}\nexports.unicodeJSONStringify = unicodeJSONStringify;\n//# sourceMappingURL=util.js.map"]},"metadata":{},"sourceType":"script"}